
Expect: mgmt user should be added by default setting and -u Test_Test_Test_Test_Test_Test31

user -a add -u Test_Test_Test_Test_Test_Test31 -p view
Enter password for the new user:[32D[32C[0m[?12l[?25h[?25l[32D[0m[J[0mEnter password for the new user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[40D[0m
Retype password for the new user:[33D[33C[0m[?12l[?25h[?25l[33D[0m[J[0mRetype password for the new user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[41D[0m

administrator@cli> 
user -u Test_Test_Test_Test_Test_Test31 -v
-------------------------------------------------------------------------------
Username: Test_Test_Test_Test_Test_Test31
Status: Enabled                         Location: Local
Privilege: View                         DisplayName: 
Email: 

administrator@cli> 

Expect: mgmt user should be added by -u 1111_1111_1111_1111_1111_11130 -p maintenance -s "name=T2,status=enable"

user -a add -t mgmt -u 1111_1111_1111_1111_1111_11130 -p maintenance -s "name=T2,status=enable"
Enter password for the new user:[32D[32C[0m[?12l[?25h[?25l[32D[0m[J[0mEnter password for the new user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[40D[0m
Retype password for the new user:[33D[33C[0m[?12l[?25h[?25l[33D[0m[J[0mRetype password for the new user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[41D[0m

administrator@cli> 
user -u 1111_1111_1111_1111_1111_11130 -v
-------------------------------------------------------------------------------
Username: 1111_1111_1111_1111_1111_11130
Status: Enabled                         Location: Local
Privilege: Maintenance                  DisplayName: T2
Email: 

administrator@cli> 

Expect: mgmt user should be added by -u T_ -p power -s "name=1111_1111_1111_1111_1111_1111_1,status=disable,email=11@11.11"

user -a add -t mgmt -u T_ -p power -s "name=1111_1111_1111_1111_1111_1111_1,status=disable,email=11@11.11"
Enter password for the new user:[32D[32C[0m[?12l[?25h[?25l[32D[0m[J[0mEnter password for the new user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[40D[0m
Retype password for the new user:[33D[33C[0m[?12l[?25h[?25l[33D[0m[J[0mRetype password for the new user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[41D[0m

administrator@cli> 
user -u T_ -v
-------------------------------------------------------------------------------
Username: T_                            Status: Disabled
Location: Local                         Privilege: Power
DisplayName: 1111_1111_1111_1111_1111_1111_1
Email: 11@11.11

administrator@cli> 

Expect: mgmt user should be added by -u t -p super -s "name=t,status=disable,email=11@11.11"

user -a add -t mgmt -u 1 -p super -s "name=t,status=disable,email=11@11.11"
Enter password for the new user:[32D[32C[0m[?12l[?25h[?25l[32D[0m[J[0mEnter password for the new user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[40D[0m
Retype password for the new user:[33D[33C[0m[?12l[?25h[?25l[33D[0m[J[0mRetype password for the new user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[41D[0m

administrator@cli> 
user -u 1 -v
-------------------------------------------------------------------------------
Username: 1                             Status: Disabled
Location: Local                         Privilege: Super
DisplayName: t                          Email: 11@11.11

administrator@cli> 
'result': 'p'

Expect: mgmt user should be modified by -p view -s "name=1111_1111_1111_1111_1111_test31,status=disable,email=11@11.11"

user -a mod -u 1 -p view -s "name=1111_1111_1111_1111_1111_test31,status=disable,email=11@11.11"

administrator@cli> 
user -u 1 -v
-------------------------------------------------------------------------------
Username: 1                             Status: Disabled
Location: Local                         Privilege: View
DisplayName: 1111_1111_1111_1111_1111_test31
Email: 11@11.11

administrator@cli> 

Expect: mgmt user should be modified by -p maintenance -s "name=1111_1111_1111_1111_1111_test3,status=enable"

user -a mod -u 1 -p maintenance -s "name=1111_1111_1111_1111_1111_test3,status=enable"

administrator@cli> 
user -u 1 -v
-------------------------------------------------------------------------------
Username: 1                             Status: Enabled
Location: Local                         Privilege: Maintenance
DisplayName: 1111_1111_1111_1111_1111_test3
Email: 11@11.11

administrator@cli> 

Expect: mgmt user should be modified by -p power -s "name=T1"

user -a mod -u 1 -p power -s "name=T1"

administrator@cli> 
user -u 1 -v
-------------------------------------------------------------------------------
Username: 1                             Status: Enabled
Location: Local                         Privilege: Power
DisplayName: T1                         Email: 11@11.11

administrator@cli> 

Expect: mgmt user should be modified by -p view -s "name=t"

user -a mod -u 1 -p super -s "name=t"

administrator@cli> 
user -u 1 -v
-------------------------------------------------------------------------------
Username: 1                             Status: Enabled
Location: Local                         Privilege: Super
DisplayName: t                          Email: 11@11.11

administrator@cli> 
'result': 'p'

Expect: snmp user should be added by -u 1 -s "auth=md5,priv=aes"

user -a add -t snmp -u 1 -s "auth=md5,priv=aes"
Enter auth password:[20D[20C[0m[?12l[?25h[?25l[20D[0m[J[0mEnter auth password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[30D[0m
Retype password:[16D[16C[0m[?12l[?25h[?25l[16D[0m[J[0mRetype password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[26D[0m
Enter priv password:[20D[20C[0m[?12l[?25h[?25l[20D[0m[J[0mEnter priv password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[30D[0m
Retype password:[16D[16C[0m[?12l[?25h[?25l[16D[0m[J[0mRetype password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[26D[0m

administrator@cli> 
user -t snmp -u 1 -v
-------------------------------------------------------------------------------
Username: 1                             Permission: READ_ONLY
Auth: MD5                               Priv: AES
Type: SNMP

administrator@cli> 

Expect: snmp user should be added by -u T2 -s "auth=sha,priv=des"

user -a add -t snmp -u T2 -s "auth=sha,priv=des"
Enter auth password:[20D[20C[0m[?12l[?25h[?25l[20D[0m[J[0mEnter auth password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[30D[0m
Retype password:[16D[16C[0m[?12l[?25h[?25l[16D[0m[J[0mRetype password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[26D[0m
Enter priv password:[20D[20C[0m[?12l[?25h[?25l[20D[0m[J[0mEnter priv password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[30D[0m
Retype password:[16D[16C[0m[?12l[?25h[?25l[16D[0m[J[0mRetype password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[26D[0m

administrator@cli> 
user -t snmp -u T2 -v
-------------------------------------------------------------------------------
Username: T2                            Permission: READ_ONLY
Auth: SHA                               Priv: DES
Type: SNMP

administrator@cli> 

Expect: snmp user should be added by -u Snmp_snmp_snmp_snmp_snmp_snm30

user -a add -t snmp -u Snmp_snmp_snmp_snmp_snmp_snm30

administrator@cli> 
user -t snmp -u Snmp_snmp_snmp_snmp_snmp_snm30 -v
-------------------------------------------------------------------------------
Username: Snmp_snmp_snmp_snmp_snmp_snm30
Permission: READ_ONLY                   Auth: N/A
Priv: N/A                               Type: SNMP

administrator@cli> 

Expect: snmp user should be added by -u snmp_snmp_snmp_snmp_snmp_snmp31

user -a add -t snmp -u snmp_snmp_snmp_snmp_snmp_snmp31

administrator@cli> 
user -t snmp -u snmp_snmp_snmp_snmp_snmp_snmp31 -v
-------------------------------------------------------------------------------
Username: snmp_snmp_snmp_snmp_snmp_snmp31
Permission: READ_ONLY                   Auth: N/A
Priv: N/A                               Type: SNMP

administrator@cli> 
'result': 'p'

Expect: snmp user should be modified by "auth=md5,priv=aes"

user -a mod -t snmp -u 1 -s "auth=md5,priv=aes"
Enter auth password:[20D[20C[0m[?12l[?25h[?25l[20D[0m[J[0mEnter auth password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[30D[0m
Retype password:[16D[16C[0m[?12l[?25h[?25l[16D[0m[J[0mRetype password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[26D[0m
Enter priv password:[20D[20C[0m[?12l[?25h[?25l[20D[0m[J[0mEnter priv password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[30D[0m
Retype password:[16D[16C[0m[?12l[?25h[?25l[16D[0m[J[0mRetype password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[26D[0m

administrator@cli> 
user -t snmp -u 1 -v
-------------------------------------------------------------------------------
Username: 1                             Permission: READ_ONLY
Auth: MD5                               Priv: AES
Type: SNMP

administrator@cli> 

Expect: snmp user should be modified by "auth=sha,priv=des"

user -a mod -t snmp -u 1 -s "auth=sha,priv=des"
Enter auth password:[20D[20C[0m[?12l[?25h[?25l[20D[0m[J[0mEnter auth password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[30D[0m
Retype password:[16D[16C[0m[?12l[?25h[?25l[16D[0m[J[0mRetype password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[26D[0m
Enter priv password:[20D[20C[0m[?12l[?25h[?25l[20D[0m[J[0mEnter priv password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[30D[0m
Retype password:[16D[16C[0m[?12l[?25h[?25l[16D[0m[J[0mRetype password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[26D[0m

administrator@cli> 
user -t snmp -u 1 -v
-------------------------------------------------------------------------------
Username: 1                             Permission: READ_ONLY
Auth: SHA                               Priv: DES
Type: SNMP

administrator@cli> 

Expect: no password snmp user should be modified by "auth=sha,priv=des"

user -a mod -t snmp -u snmp_snmp_snmp_snmp_snmp_snmp31 -s "auth=sha,priv=des"
Enter auth password:[20D[20C[0m[?12l[?25h[?25l[20D[0m[J[0mEnter auth password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[30D[0m
Retype password:[16D[16C[0m[?12l[?25h[?25l[16D[0m[J[0mRetype password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[26D[0m
Enter priv password:[20D[20C[0m[?12l[?25h[?25l[20D[0m[J[0mEnter priv password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[30D[0m
Retype password:[16D[16C[0m[?12l[?25h[?25l[16D[0m[J[0mRetype password:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[26D[0m

administrator@cli> 
user -t snmp -u snmp_snmp_snmp_snmp_snmp_snmp31 -v
-------------------------------------------------------------------------------
Username: snmp_snmp_snmp_snmp_snmp_snmp31
Permission: READ_ONLY                   Auth: SHA
Priv: DES                               Type: SNMP

administrator@cli> 
'result': 'p'

Expect: nas user should be added by -u 1 -s "group=users,department=default_group,phone=test_number,email=12@11.23,name=123"

user -a add -t nas -u 1 -s "group=users,department=default_group,phone=test_number,email=12@11.23,name=123"
Enter password for the new nas user:[36D[36C[0m[?12l[?25h[?25l[36D[0m[J[0mEnter password for the new nas user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[44D[0m
Retype password for the new nas user:[37D[37C[0m[?12l[?25h[?25l[37D[0m[J[0mRetype password for the new nas user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[45D[0m

administrator@cli> 
user -t nas -v -u 1
-------------------------------------------------------------------------------
UserName: 1                             Email: 12@11.23
DisplayName: 123                        Telephone: test_number
Department: default_group               PriGroupName: users
Status: Ready                           SecGroupName: 

administrator@cli> 

Expect: nas user should be added by T2 -s "group=test_users,department=new_group,phone=0123456789,email=12@11.23"

user -a add -t nas -u T2 -s "group=test_users,department=new_group,phone=0123456789,email=12@11.23"
Enter password for the new nas user:[36D[36C[0m[?12l[?25h[?25l[36D[0m[J[0mEnter password for the new nas user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[44D[0m
Retype password for the new nas user:[37D[37C[0m[?12l[?25h[?25l[37D[0m[J[0mRetype password for the new nas user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[45D[0m

administrator@cli> 
user -t nas -v -u T2
-------------------------------------------------------------------------------
UserName: T2                            Email: 12@11.23
DisplayName:                            Telephone: 0123456789
Department: new_group                   PriGroupName: test_users
Status: Ready                           SecGroupName: 

administrator@cli> 

Expect: nas user should be added by -u test_test_test_test_test_nas30 -s "department=1,phone=123456000"

user -a add -t nas -u test_test_test_test_test_nas30 -s "department=1,phone=123456000"
Enter password for the new nas user:[36D[36C[0m[?12l[?25h[?25l[36D[0m[J[0mEnter password for the new nas user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[44D[0m
Retype password for the new nas user:[37D[37C[0m[?12l[?25h[?25l[37D[0m[J[0mRetype password for the new nas user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[45D[0m

administrator@cli> 
user -t nas -v -u test_test_test_test_test_nas30
-------------------------------------------------------------------------------
UserName: test_test_test_test_test_nas30
Email:                                  DisplayName: 
Telephone: 123456000                    Department: 1
PriGroupName: users                     Status: Ready
SecGroupName: 

administrator@cli> 

Expect: nas user should be added by -u test_test_test_test_test_test31

user -a add -t nas -u test_test_test_test_test_test31
Enter password for the new nas user:[36D[36C[0m[?12l[?25h[?25l[36D[0m[J[0mEnter password for the new nas user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[44D[0m
Retype password for the new nas user:[37D[37C[0m[?12l[?25h[?25l[37D[0m[J[0mRetype password for the new nas user:[0m*[0m*[0m*[0m*[0m*[0m*[0m*[0m*[45D[0m

administrator@cli> 
user -t nas -v -u test_test_test_test_test_test31
-------------------------------------------------------------------------------
UserName: test_test_test_test_test_test31
Email:                                  DisplayName: 
Telephone:                              Department: 
PriGroupName: users                     Status: Ready
SecGroupName: 

administrator@cli> 
'result': 'p'

Expect: nas user should be modified by "group=test_users,department=default_group,phone=test_number,email=ab@cd.ef,name=1"

user -a mod -t nas -u 1 -s "group=test_users,department=default_group,phone=test_number,email=ab@cd.ef,name=1"

administrator@cli> 
user -t nas -v -u 1
-------------------------------------------------------------------------------
UserName: 1                             Email: ab@cd.ef
DisplayName: 1                          Telephone: test_number
Department: default_group               PriGroupName: test_users
Status: Ready                           SecGroupName: 

administrator@cli> 

Expect: nas user should be modified by "group=users,department=new_group,phone=0123456789,name=T1"

user -a mod -t nas -u 1 -s "group=users,department=new_group,phone=0123456789,name=T1"

administrator@cli> 
user -t nas -v -u 1
-------------------------------------------------------------------------------
UserName: 1                             Email: ab@cd.ef
DisplayName: T1                         Telephone: 0123456789
Department: new_group                   PriGroupName: users
Status: Ready                           SecGroupName: 

administrator@cli> 

Expect: nas user should be modified by "name=test_test_test_test_test_tes30"

user -a mod -t nas -u 1 -s "name=test_test_test_test_test_tes30"

administrator@cli> 
user -t nas -v -u 1
-------------------------------------------------------------------------------
UserName: 1                             Email: ab@cd.ef
DisplayName: test_test_test_test_test_tes30
Telephone: 0123456789                   Department: new_group
PriGroupName: users                     Status: Ready
SecGroupName: 

administrator@cli> 

Expect: nas user should be modified by "name=test_test_test_test_test_test31"

user -a mod -t nas -u 1 -s "name=test_test_test_test_test_test31"

administrator@cli> 
user -t nas -v -u 1
-------------------------------------------------------------------------------
UserName: 1                             Email: ab@cd.ef
DisplayName: test_test_test_test_test_test31
Telephone: 0123456789                   Department: new_group
PriGroupName: users                     Status: Ready
SecGroupName: 

administrator@cli> 
'result': 'p'

Expect: all of mgmt type user should be listed

user
===============================================================================
Username              Location  Status    Privilege  DisplayName Email        
===============================================================================
administrator         Local     Enabled   Super      Super user  admin@yourco  
                                                                 mpany.com     
Test_Test_Test_Test_T Local     Enabled   View                                 
est_Test31                                                                     
1111_1111_1111_1111_1 Local     Enabled   Maintenanc T2                        
111_11130                                 e                                    
T_                    Local     Disabled  Power      1111_1111_1 11@11.11      
                                                     111_1111_11               
                                                     11_1111_1                 
1                     Local     Enabled   Super      t           11@11.11      

administrator@cli> 

Expect: all of nas type user should be listed

user -t nas
===============================================================================
UserName                DisplayName             Department Telephone  Email    
===============================================================================
admin                   NAS default User                                       
1                       test_test_test_test_tes new_group  0123456789 ab@cd.ef 
                        t_test31                                               
T2                                              new_group  0123456789 12@11.23 
test_test_test_test_tes                         1          123456000           
t_nas30                                                                        
test_test_test_test_tes                                                        
t_test31                                                                       

administrator@cli> 

Expect: all of snmp type user should be listed

user -t snmp
===============================================================================
Username                             Type     Auth     Priv     Permission     
===============================================================================
1                                    SNMP     SHA      DES      READ_ONLY      
T2                                   SNMP     SHA      DES      READ_ONLY      
Snmp_snmp_snmp_snmp_snmp_snm30       SNMP     N/A      N/A      READ_ONLY      
snmp_snmp_snmp_snmp_snmp_snmp31      SNMP     SHA      DES      READ_ONLY      

administrator@cli> 

Expect: specific mgmt type user should be listed

user -u 1
===============================================================================
Username              Location  Status    Privilege  DisplayName Email        
===============================================================================
1                     Local     Enabled   Super      t           11@11.11      

administrator@cli> 

Expect: specific mgmt type user should be listed

user -t mgmt -u 1
===============================================================================
Username              Location  Status    Privilege  DisplayName Email        
===============================================================================
1                     Local     Enabled   Super      t           11@11.11      

administrator@cli> 

Expect: specific nas type user should be listed

user -t nas -u 1
===============================================================================
UserName   DisplayName                       Department  Telephone   Email     
===============================================================================
1          test_test_test_test_test_test31   new_group   0123456789  ab@cd.ef  

administrator@cli> 

Expect: specific snmp type user should be listed

user -t snmp -u 1
===============================================================================
Username          Type          Auth          Priv          Permission         
===============================================================================
1                 SNMP          SHA           DES           READ_ONLY          

administrator@cli> 
'result': 'p'

Expect: all of mgmt type user should be listed by verbose mode

user -v
-------------------------------------------------------------------------------
Username: administrator                 Status: Enabled
Location: Local                         Privilege: Super
DisplayName: Super user                 Email: admin@yourcompany.com
-------------------------------------------------------------------------------
Username: Test_Test_Test_Test_Test_Test31
Status: Enabled                         Location: Local
Privilege: View                         DisplayName: 
Email: 
-------------------------------------------------------------------------------
Username: 1111_1111_1111_1111_1111_11130
Status: Enabled                         Location: Local
Privilege: Maintenance                  DisplayName: T2
Email: 
-------------------------------------------------------------------------------
Username: T_                            Status: Disabled
Location: Local                         Privilege: Power
DisplayName: 1111_1111_1111_1111_1111_1111_1
Email: 11@11.11
-------------------------------------------------------------------------------
Username: 1                             Status: Enabled
Location: Local                         Privilege: Super
DisplayName: t                          Email: 11@11.11

administrator@cli> 

Expect: all of nas type user should be listed by verbose mode

user -t nas -v
-------------------------------------------------------------------------------
UserName: admin                         Email: 
DisplayName: NAS default User           Telephone: 
Department:                             PriGroupName: users
Status: Ready                           SecGroupName: 
-------------------------------------------------------------------------------
UserName: 1                             Email: ab@cd.ef
DisplayName: test_test_test_test_test_test31
Telephone: 0123456789                   Department: new_group
PriGroupName: users                     Status: Ready
SecGroupName: 
-------------------------------------------------------------------------------
UserName: T2                            Email: 12@11.23
DisplayName:                            Telephone: 0123456789
Department: new_group                   PriGroupName: test_users
Status: Ready                           SecGroupName: 
-------------------------------------------------------------------------------
UserName: test_test_test_test_test_nas30
Email:                                  DisplayName: 
Telephone: 123456000                    Department: 1
PriGroupName: users                     Status: Ready
SecGroupName: 
-------------------------------------------------------------------------------
UserName: test_test_test_test_test_test31
Email:                                  DisplayName: 
Telephone:                              Department: 
PriGroupName: users                     Status: Ready
SecGroupName: 

administrator@cli> 

Expect: all of snmp type user should be listed by verbose mode

user -t snmp -v 
-------------------------------------------------------------------------------
EngineId: 0x80001f88809d27074ffdf9315a00000000
Username: 1                             Permission: READ_ONLY
Auth: SHA                               Priv: DES
Type: SNMP
-------------------------------------------------------------------------------
EngineId: 0x80001f88809d27074ffdf9315a00000000
Username: T2                            Permission: READ_ONLY
Auth: SHA                               Priv: DES
Type: SNMP
-------------------------------------------------------------------------------
EngineId: 0x80001f88809d27074ffdf9315a00000000
Username: Snmp_snmp_snmp_snmp_snmp_snm30
Permission: READ_ONLY                   Auth: N/A
Priv: N/A                               Type: SNMP
-------------------------------------------------------------------------------
EngineId: 0x80001f88809d27074ffdf9315a00000000
Username: snmp_snmp_snmp_snmp_snmp_snmp31
Permission: READ_ONLY                   Auth: SHA
Priv: DES                               Type: SNMP

administrator@cli> 

Expect: specific mgmt type user should be listed by verbose mode

user -u 1 -v 
-------------------------------------------------------------------------------
Username: 1                             Status: Enabled
Location: Local                         Privilege: Super
DisplayName: t                          Email: 11@11.11

administrator@cli> 

Expect: specific mgmt type user should be listed by verbose mode

user -t mgmt -u 1 -v
-------------------------------------------------------------------------------
Username: 1                             Status: Enabled
Location: Local                         Privilege: Super
DisplayName: t                          Email: 11@11.11

administrator@cli> 

Expect: specific nas type user should be listed by verbose mode

user -t nas -u 1 -v
-------------------------------------------------------------------------------
UserName: 1                             Email: ab@cd.ef
DisplayName: test_test_test_test_test_test31
Telephone: 0123456789                   Department: new_group
PriGroupName: users                     Status: Ready
SecGroupName: 

administrator@cli> 

Expect: specific snmp type user should be listed by verbose mode

user -t snmp -u 1 -v
-------------------------------------------------------------------------------
Username: 1                             Permission: READ_ONLY
Auth: SHA                               Priv: DES
Type: SNMP

administrator@cli> 

Fail: please check out EngineId:

'result': 'f'

Expect: specific user should be deleted

user -a del -u T_

administrator@cli> 
user -u T_
Error (0x200): Invalid username
Username not found

administrator@cli> 

Expect: specific mgmt type user should be deleted

user -a del -t mgmt -u 1

administrator@cli> 
user -t mgmt -u 1
Error (0x200): Invalid username
Username not found

administrator@cli> 

Expect: specific nas type user should be deleted

user -a del -t nas -u T2

administrator@cli> 
user -t nas -u T2
Error (0x4100104): Incorrect parameters: User is not found.

administrator@cli> 

Expect: specific snmp type user should be deleted

user -a del -t snmp -u T2

administrator@cli> 
user -t snmp -u T2
Error (0x200): Invalid username

administrator@cli> 
'result': 'p'

Expect: Invalid setting parameters

user test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid username

user -u test
Error (0x200): Invalid username
Username not found

administrator@cli> 

Expect: Invalid setting parameters

user -t test
Error (0x2013): Invalid setting parameters
-t: invalid setting test (mgmt|snmp|nas)

administrator@cli> 

Expect: User is not found

user -t nas -u test
Error (0x4100104): Incorrect parameters: User is not found.

administrator@cli> 

Expect: Invalid username

user -t snmp -u test
Error (0x200): Invalid username

administrator@cli> 

Expect: Invalid setting parameters

user -a add test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

user -a add -t test
Error (0x2013): Invalid setting parameters
-t: invalid setting test (mgmt|snmp|nas)

administrator@cli> 

Expect: Invalid setting parameters

user -a add -u #$% -p view
Error (0x2013): Invalid setting parameters
id contain only alphanumeric characters and underscores

administrator@cli> 

Expect: Setting parameters too long

user -a add -u test_test_test_test_test_test_32 -p view
Error (0x2014): Setting parameters too long
-u: invalid setting test_test_test_test_test_test_32

administrator@cli> 

Expect: Invalid setting parameters

user -a add -u test -p view -s "status=test"
Error (0x2013): Invalid setting parameters
status: invalid setting test (enable|disable)

administrator@cli> 

Expect: Setting parameters too long

user -a add -t nas -u test_test_test_test_test_test_32
Error (0x2014): Setting parameters too long
-u: invalid setting test_test_test_test_test_test_32

administrator@cli> 

Expect: Setting parameters too long

user -a add -t snmp -u test_test_test_test_test_test_32
Error (0x2014): Setting parameters too long
-u: invalid setting test_test_test_test_test_test_32

administrator@cli> 

Expect: Invalid setting parameters

user -a add -t snmp -u test -s "auth=test,priv=des"
Error (0x2013): Invalid setting parameters
auth: invalid setting test (md5|sha)

administrator@cli> 

Expect: Invalid setting parameters

user -a add -t snmp -u test -s "auth=md5,priv=test"
Error (0x2013): Invalid setting parameters
priv: invalid setting test (des|aes)

administrator@cli> 

Expect: Invalid setting parameters

user -a mod test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

user -a mod -u test
Error (0x2013): Invalid setting parameters

administrator@cli> 

Expect: Invalid setting parameters

user -a mod -u 1111_1111_1111_1111_1111_11130 -p test
Error (0x2013): Invalid setting parameters
-p: invalid setting test (super|power|maintenance|view)

administrator@cli> 

Expect: Invalid setting parameters

user -a mod -u 1111_1111_1111_1111_1111_11130 -s "status=test"
Error (0x2013): Invalid setting parameters
status: invalid setting test (enable|disable)

administrator@cli> 

Expect: Invalid setting parameters

user -a mod -t test
Error (0x2013): Invalid setting parameters
-t: invalid setting test (mgmt|snmp|nas)

administrator@cli> 

Expect: Invalid setting parameters

user -a mod -t nas test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid input group name

user -a mod -t nas -u 1 -s "group=test"
Error (0x4100104): Incorrect parameters: Invalid input group name: test.

administrator@cli> 

Expect: Invalid setting parameters

user -a mod -t nas -u 1 -s "phone=test#$%&*"

administrator@cli> 

Fail: user -a mod -t nas -u 1 -s "phone=test#$%&*"


Expect: Invalid setting parameters

user -a mod -t snmp test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

user -a mod -t snmp -u 1 -s "auth=test"
Error (0x2013): Invalid setting parameters
auth: invalid setting test (md5|sha)

administrator@cli> 

Expect: Invalid setting parameters

user -a mod -t snmp -u 1 -s "priv=test"
Error (0x2013): Invalid setting parameters
priv: invalid setting test (des|aes)

administrator@cli> 

Expect: Invalid setting parameters

user -a del test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid username

user -a del -u test
Error (0x200): Invalid username

administrator@cli> 

Expect: Invalid username

user -a del -t nas -u test
Error (0x4100104): Incorrect parameters: Invalid username

administrator@cli> 

Expect: Invalid username

user -a del -t snmp -u test
Error (0x200): Invalid username

administrator@cli> 
'result': 'f'

Expect: Invalid option for the command or the action

user -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

user -t nas -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

user -t snmp -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

user -a add -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

user -a add -t nas -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

user -a add -t snmp -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

user -a mod -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

user -a mod -u -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

user -a del -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

user -a del -t nas -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

user -a del -t snmp -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 
'result': 'p'

Expect: Missing parameter

user -u 
Error (0x403): Missing parameter
-u: missing value

administrator@cli> 

Expect: Missing parameter

user -t 
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 

Expect: Missing parameter

user -t nas -u 
Error (0x403): Missing parameter
-u: missing value

administrator@cli> 

Expect: Missing parameter

user -t snmp -u 
Error (0x403): Missing parameter
-u: missing value

administrator@cli> 

Expect: Missing parameter

user -a add 
Error (0x403): Missing parameter
missing parameter '-u' for '-a add'

administrator@cli> 

Expect: Missing parameter

user -a add -u
Error (0x403): Missing parameter
-u: missing value

administrator@cli> 

Expect: Missing parameter

user -a add -u test -p 
Error (0x403): Missing parameter
-p: missing value

administrator@cli> 

Expect: Missing parameter

user -a add -u test -t
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 

Expect: Missing parameter

user -a mod 
Error (0x403): Missing parameter
missing parameter '-u' for '-a mod'

administrator@cli> 

Expect: Missing parameter

user -a mod -u 
Error (0x403): Missing parameter
-u: missing value

administrator@cli> 

Expect: Missing parameter

user -a mod -u 1111_1111_1111_1111_1111_11130 -p 
Error (0x403): Missing parameter
-p: missing value

administrator@cli> 

Expect: Missing parameter

user -a mod -u 1111_1111_1111_1111_1111_11130 -s 
Error (0x403): Missing parameter
-s: missing value

administrator@cli> 

Expect: Missing parameter

user -a mod -t nas
Error (0x403): Missing parameter
missing parameter '-u' for '-a mod'

administrator@cli> 

Expect: Missing parameter

user -a mod -t nas -u
Error (0x403): Missing parameter
-u: missing value

administrator@cli> 

Expect: Missing parameter

user -a mod -t nas -u 1
unexpected error
please send service report to your administrator
administrator@cli> 

Fail: user -a mod -t nas -u 1


Expect: Missing parameter

user -a mod -t snmp
Error (0x403): Missing parameter
missing parameter '-u' for '-a mod'

administrator@cli> 

Expect: Missing parameter

user -a mod -t snmp -u
Error (0x403): Missing parameter
-u: missing value

administrator@cli> 

Expect: Missing parameter

user -a mod -t snmp -u 1
unexpected error
please send service report to your administrator
administrator@cli> 

Fail: user -a mod -t snmp -u 1


Expect: Missing parameter

user -a del
Error (0x403): Missing parameter
missing parameter '-u' for '-a del'

administrator@cli> 

Expect: Missing parameter

user -a del -u
Error (0x403): Missing parameter
-u: missing value

administrator@cli> 

Expect: Missing parameter

user -a del -t nas -u
Error (0x403): Missing parameter
-u: missing value

administrator@cli> 

Expect: Missing parameter

user -a del -t snmp -u
Error (0x403): Missing parameter
-u: missing value

administrator@cli> 
'result': 'f'

Expect: periodsnap of volume type should be added by "starthour=0, endhour=1, keepnum=1"

periodsnap -a add -t volume -d 0 -s "starthour=0, endhour=1, keepnum=1"

administrator@cli> 
periodsnap -t volume -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Disabled                        StartTime: 0:00
SchedType: Daily                        KeepNumber: 1
Interval: 60                            EndTime: 1:00
CreateTime: 2017-12-14 19:34:08         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=5,starthour=1, endhour=2, keepnum=1"

periodsnap -a add -t volume -d 1 -s "interval=5,starthour=1, endhour=2, keepnum=1"

administrator@cli> 
periodsnap -t volume -v -i 2
-------------------------------------------------------------------------------
Id: 2                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 1                            SourceNames: test_periodsnap1
Status: Disabled                        StartTime: 1:00
SchedType: Daily                        KeepNumber: 1
Interval: 5                             EndTime: 2:00
CreateTime: 2017-12-14 19:34:12         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=10,starthour=2, endhour=3, keepnum=2,status=disable,recurtype=daily"

periodsnap -a add -t volume -d 2 -s "interval=10,starthour=2, endhour=3, keepnum=2,status=disable,recurtype=daily"

administrator@cli> 
periodsnap -t volume -v -i 3
-------------------------------------------------------------------------------
Id: 3                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 2                            SourceNames: test_periodsnap2
Status: Disabled                        StartTime: 2:00
SchedType: Daily                        KeepNumber: 2
Interval: 10                            EndTime: 3:00
CreateTime: 2017-12-14 19:34:15         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=15,starthour=3, endhour=4, keepnum=127,status=enable,recurtype=daily"

periodsnap -a add -t volume -d 3 -s "interval=15,starthour=3, endhour=4, keepnum=127,status=enable,recurtype=daily"

administrator@cli> 
periodsnap -t volume -v -i 4
-------------------------------------------------------------------------------
Id: 4                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 3                            SourceNames: test_periodsnap3
Status: Enabled                         StartTime: 3:00
SchedType: Daily                        KeepNumber: 127
Interval: 15                            EndTime: 4:00
CreateTime: 2017-12-14 19:34:18         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=30,starthour=4, endhour=5, keepnum=128"

periodsnap -a add -t volume -d 4 -s "interval=30,starthour=4, endhour=5, keepnum=128"

administrator@cli> 
periodsnap -t volume -v -i 5
-------------------------------------------------------------------------------
Id: 5                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 4                            SourceNames: test_periodsnap4
Status: Disabled                        StartTime: 4:00
SchedType: Daily                        KeepNumber: 128
Interval: 30                            EndTime: 5:00
CreateTime: 2017-12-14 19:34:21         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=60,starthour=5, endhour=6, keepnum=127"

periodsnap -a add -t volume -d 5 -s "interval=60,starthour=5, endhour=6, keepnum=127"

administrator@cli> 
periodsnap -t volume -v -i 6
-------------------------------------------------------------------------------
Id: 6                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 5                            SourceNames: test_periodsnap5
Status: Disabled                        StartTime: 5:00
SchedType: Daily                        KeepNumber: 127
Interval: 60                            EndTime: 6:00
CreateTime: 2017-12-14 19:34:24         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=120,starthour=6, endhour=7, keepnum=128"

periodsnap -a add -t volume -d 6 -s "interval=120,starthour=6, endhour=7, keepnum=128"

administrator@cli> 
periodsnap -t volume -v -i 7
-------------------------------------------------------------------------------
Id: 7                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 6                            SourceNames: test_periodsnap6
Status: Disabled                        StartTime: 6:00
SchedType: Daily                        KeepNumber: 128
Interval: 120                           EndTime: 7:00
CreateTime: 2017-12-14 19:34:28         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=240,starthour=7, endhour=8, keepnum=127"

periodsnap -a add -t volume -d 7 -s "interval=240,starthour=7, endhour=8, keepnum=127"

administrator@cli> 
periodsnap -t volume -v -i 8
-------------------------------------------------------------------------------
Id: 8                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 7                            SourceNames: test_periodsnap7
Status: Disabled                        StartTime: 7:00
SchedType: Daily                        KeepNumber: 127
Interval: 240                           EndTime: 8:00
CreateTime: 2017-12-14 19:34:31         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=360,starthour=8, endhour=9, keepnum=128"

periodsnap -a add -t volume -d 8 -s "interval=360,starthour=8, endhour=9, keepnum=128"

administrator@cli> 
periodsnap -t volume -v -i 9
-------------------------------------------------------------------------------
Id: 9                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 8                            SourceNames: test_periodsnap8
Status: Disabled                        StartTime: 8:00
SchedType: Daily                        KeepNumber: 128
Interval: 360                           EndTime: 9:00
CreateTime: 2017-12-14 19:34:34         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=480,starthour=9, endhour=10, keepnum=127"

periodsnap -a add -t volume -d 9 -s "interval=480,starthour=9, endhour=10, keepnum=127"

administrator@cli> 

Expect: periodsnap of volume type should be added by "starthour=0, endhour=1, keepnum=1"

periodsnap -a add -t volume -d 0 -s "starthour=0, endhour=1, keepnum=1"

administrator@cli> 
periodsnap -t volume -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Disabled                        StartTime: 0:00
SchedType: Daily                        KeepNumber: 1
Interval: 60                            EndTime: 1:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=5,starthour=1, endhour=2, keepnum=1"

periodsnap -a add -t volume -d 1 -s "interval=5,starthour=1, endhour=2, keepnum=1"

administrator@cli> 
periodsnap -t volume -v -i 2
-------------------------------------------------------------------------------
Id: 2                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 1                            SourceNames: test_periodsnap1
Status: Disabled                        StartTime: 1:00
SchedType: Daily                        KeepNumber: 1
Interval: 5                             EndTime: 2:00
CreateTime: 2017-12-14 19:36:24         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=10,starthour=2, endhour=3, keepnum=2,status=disable,recurtype=daily"

periodsnap -a add -t volume -d 2 -s "interval=10,starthour=2, endhour=3, keepnum=2,status=disable,recurtype=daily"

administrator@cli> 
periodsnap -t volume -v -i 3
-------------------------------------------------------------------------------
Id: 3                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 2                            SourceNames: test_periodsnap2
Status: Disabled                        StartTime: 2:00
SchedType: Daily                        KeepNumber: 2
Interval: 10                            EndTime: 3:00
CreateTime: 2017-12-14 19:36:27         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=15,starthour=3, endhour=4, keepnum=127,status=enable,recurtype=daily"

periodsnap -a add -t volume -d 3 -s "interval=15,starthour=3, endhour=4, keepnum=127,status=enable,recurtype=daily"

administrator@cli> 
periodsnap -t volume -v -i 4
-------------------------------------------------------------------------------
Id: 4                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 3                            SourceNames: test_periodsnap3
Status: Enabled                         StartTime: 3:00
SchedType: Daily                        KeepNumber: 127
Interval: 15                            EndTime: 4:00
CreateTime: 2017-12-14 19:36:31         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=30,starthour=4, endhour=5, keepnum=128"

periodsnap -a add -t volume -d 4 -s "interval=30,starthour=4, endhour=5, keepnum=128"

administrator@cli> 
periodsnap -t volume -v -i 5
-------------------------------------------------------------------------------
Id: 5                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 4                            SourceNames: test_periodsnap4
Status: Disabled                        StartTime: 4:00
SchedType: Daily                        KeepNumber: 128
Interval: 30                            EndTime: 5:00
CreateTime: 2017-12-14 19:36:34         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=60,starthour=5, endhour=6, keepnum=127"

periodsnap -a add -t volume -d 5 -s "interval=60,starthour=5, endhour=6, keepnum=127"

administrator@cli> 
periodsnap -t volume -v -i 6
-------------------------------------------------------------------------------
Id: 6                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 5                            SourceNames: test_periodsnap5
Status: Disabled                        StartTime: 5:00
SchedType: Daily                        KeepNumber: 127
Interval: 60                            EndTime: 6:00
CreateTime: 2017-12-14 19:36:37         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=120,starthour=6, endhour=7, keepnum=128"

periodsnap -a add -t volume -d 6 -s "interval=120,starthour=6, endhour=7, keepnum=128"

administrator@cli> 
periodsnap -t volume -v -i 7
-------------------------------------------------------------------------------
Id: 7                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 6                            SourceNames: test_periodsnap6
Status: Disabled                        StartTime: 6:00
SchedType: Daily                        KeepNumber: 128
Interval: 120                           EndTime: 7:00
CreateTime: 2017-12-14 19:36:40         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=240,starthour=7, endhour=8, keepnum=127"

periodsnap -a add -t volume -d 7 -s "interval=240,starthour=7, endhour=8, keepnum=127"

administrator@cli> 
periodsnap -t volume -v -i 8
-------------------------------------------------------------------------------
Id: 8                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 7                            SourceNames: test_periodsnap7
Status: Disabled                        StartTime: 7:00
SchedType: Daily                        KeepNumber: 127
Interval: 240                           EndTime: 8:00
CreateTime: 2017-12-14 19:36:44         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=360,starthour=8, endhour=9, keepnum=128"

periodsnap -a add -t volume -d 8 -s "interval=360,starthour=8, endhour=9, keepnum=128"

administrator@cli> 
periodsnap -t volume -v -i 9
-------------------------------------------------------------------------------
Id: 9                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 8                            SourceNames: test_periodsnap8
Status: Disabled                        StartTime: 8:00
SchedType: Daily                        KeepNumber: 128
Interval: 360                           EndTime: 9:00
CreateTime: 2017-12-14 19:36:47         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=480,starthour=9, endhour=10, keepnum=127"

periodsnap -a add -t volume -d 9 -s "interval=480,starthour=9, endhour=10, keepnum=127"

administrator@cli> 
periodsnap -t volume -v -i 10
-------------------------------------------------------------------------------
Id: 10                                  Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 9                            SourceNames: test_periodsnap9
Status: Disabled                        StartTime: 9:00
SchedType: Daily                        KeepNumber: 127
Interval: 480                           EndTime: 10:00
CreateTime: 2017-12-14 19:36:50         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "starthour=0, endhour=12, keepnum=1"

periodsnap -a add -t nasshare -d 0 -s "starthour=0, endhour=12, keepnum=1"

administrator@cli> 
periodsnap -t nasshare -v -i 11
-------------------------------------------------------------------------------
Id: 11                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap_0
Status: Disabled                        StartTime: 0:00
SchedType: Daily                        KeepNumber: 1
Interval: 60                            EndTime: 12:00
CreateTime: 2017-12-14 19:36:53         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=720,starthour=12, endhour=13, keepnum=2,status=disable,recurtype=daily"

periodsnap -a add -t nasshare -d 1 -s "interval=720,starthour=12, endhour=13, keepnum=2,status=disable,recurtype=daily"

administrator@cli> 
periodsnap -t nasshare -v -i 12
-------------------------------------------------------------------------------
Id: 12                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 1                            SourceNames: test_periodsnap_1
Status: Disabled                        StartTime: 12:00
SchedType: Daily                        KeepNumber: 2
Interval: 720                           EndTime: 13:00
CreateTime: 2017-12-14 19:36:56         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "interval=1400,starthour=18, endhour=19, keepnum=128"

periodsnap -a add -t nasshare -d 2 -s "interval=1440,starthour=18, endhour=19, keepnum=128,status=enable"

administrator@cli> 
periodsnap -t nasshare -v -i 13
-------------------------------------------------------------------------------
Id: 13                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 2                            SourceNames: test_periodsnap_2
Status: Enabled                         StartTime: 18:00
SchedType: Daily                        KeepNumber: 128
Interval: 1440                          EndTime: 19:00
CreateTime: 2017-12-14 19:37:00         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "starthour=0,keepnum=128,status=disable,recurtype=weekly,dow=sun"

periodsnap -a add -t volume -d 10 -s "starthour=0,keepnum=128,status=disable,recurtype=weekly,dow=sun"

administrator@cli> 
periodsnap -t volume -v -i 14
-------------------------------------------------------------------------------
Id: 14                                  Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 10                           SourceNames: test_periodsnap10
Status: Disabled                        StartTime: 0:00
SchedType: Weekly                       KeepNumber: 128
DayOfWeek: Sun                          CreateTime: 2017-12-14 19:37:03
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "starthour=1,keepnum=127,status=enable,recurtype=weekly,dow=mon"

periodsnap -a add -t volume -d 11 -s "starthour=1,keepnum=127,status=enable,recurtype=weekly,dow=mon"

administrator@cli> 
periodsnap -t volume -v -i 15
-------------------------------------------------------------------------------
Id: 15                                  Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 11                           SourceNames: test_periodsnap11
Status: Enabled                         StartTime: 1:00
SchedType: Weekly                       KeepNumber: 127
DayOfWeek: Mon                          CreateTime: 2017-12-14 19:37:06
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "starthour=2,keepnum=128,status=disable,recurtype=weekly,dow=tues"

periodsnap -a add -t volume -d 12 -s "starthour=2,keepnum=128,status=disable,recurtype=weekly,dow=tues"

administrator@cli> 
periodsnap -t volume -v -i 16
-------------------------------------------------------------------------------
Id: 16                                  Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 12                           SourceNames: test_periodsnap12
Status: Disabled                        StartTime: 2:00
SchedType: Weekly                       KeepNumber: 128
DayOfWeek: Tues                         CreateTime: 2017-12-14 19:37:09
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "starthour=20,keepnum=127,status=enable,recurtype=weekly,dow=wed"

periodsnap -a add -t nasshare -d 3 -s "starthour=20,keepnum=127,status=enable,recurtype=weekly,dow=wed"

administrator@cli> 
periodsnap -t nasshare -v -i 17
-------------------------------------------------------------------------------
Id: 17                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 3                            SourceNames: test_periodsnap_3
Status: Enabled                         StartTime: 20:00
SchedType: Weekly                       KeepNumber: 127
DayOfWeek: Wed                          CreateTime: 2017-12-14 19:37:13
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "starthour=21,keepnum=128,status=disable,recurtype=weekly,dow=thur"

periodsnap -a add -t nasshare -d 4 -s "starthour=21,keepnum=128,status=disable,recurtype=weekly,dow=thur"

administrator@cli> 
periodsnap -t nasshare -v -i 18
-------------------------------------------------------------------------------
Id: 18                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 4                            SourceNames: test_periodsnap_4
Status: Disabled                        StartTime: 21:00
SchedType: Weekly                       KeepNumber: 128
DayOfWeek: Thur                         CreateTime: 2017-12-14 19:37:16
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "starthour=22,keepnum=127,recurtype=weekly,dow=fri"

periodsnap -a add -t nasshare -d 5 -s "starthour=22,keepnum=127,recurtype=weekly,dow=fri"

administrator@cli> 
periodsnap -t nasshare -v -i 19
-------------------------------------------------------------------------------
Id: 19                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 5                            SourceNames: test_periodsnap_5
Status: Disabled                        StartTime: 22:00
SchedType: Weekly                       KeepNumber: 127
DayOfWeek: Fri                          CreateTime: 2017-12-14 19:37:19
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "starthour=23,keepnum=128,,recurtype=weekly,dow=sat"

periodsnap -a add -t nasshare -d 6 -s "starthour=23,keepnum=128,recurtype=weekly,dow=sat fri"

administrator@cli> 
periodsnap -t nasshare -v -i 20
-------------------------------------------------------------------------------
Id: 20                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 6                            SourceNames: test_periodsnap_6
Status: Disabled                        StartTime: 23:00
SchedType: Weekly                       KeepNumber: 128
DayOfWeek: Sat Fri                      CreateTime: 2017-12-14 19:37:22
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 

Expect: periodsnap of volume type should be added by "starthour=0,keepnum=128,,recurtype=weekly"

periodsnap -a add -t nasshare -d 7 -s "starthour=0,keepnum=128,recurtype=weekly"

administrator@cli> 
periodsnap -t nasshare -v -i 21
-------------------------------------------------------------------------------
Id: 21                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 7                            SourceNames: test_periodsnap_7
Status: Disabled                        StartTime: 0:00
SchedType: Weekly                       KeepNumber: 128
DayOfWeek: Sun                          CreateTime: 2017-12-14 19:37:26
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 
'result': 'p'

Expect: all periodsnap of volume type should be listed

periodsnap
===============================================================================
Id   Type        SourceIDs             Status    SchedType StartTime KeepNumber
===============================================================================
1    volume      0                     Disabled  Daily     0:00      3         
2    volume      1                     Disabled  Daily     1:00      1         
3    volume      2                     Disabled  Daily     2:00      2         
4    volume      3                     Enabled   Daily     3:00      127       
5    volume      4                     Disabled  Daily     4:00      128       
6    volume      5                     Disabled  Daily     5:00      127       
7    volume      6                     Disabled  Daily     6:00      128       
8    volume      7                     Disabled  Daily     7:00      127       
9    volume      8                     Disabled  Daily     8:00      128       
10   volume      9                     Disabled  Daily     9:00      127       
11   nasshare    0                     Disabled  Daily     0:00      1         
12   nasshare    1                     Disabled  Daily     1:00      2         
13   nasshare    2                     Enabled   Daily     18:00     128       
14   volume      10                    Disabled  Weekly    0:00      128       
15   volume      11                    Enabled   Weekly    1:00      127       
16   volume      12                    Disabled  Weekly    2:00      128       
17   nasshare    3                     Enabled   Weekly    20:00     127       
18   nasshare    4                     Disabled  Weekly    21:00     128       
19   nasshare    5                     Disabled  Weekly    22:00     127       
20   nasshare    6                     Disabled  Weekly    23:00     128       
21   nasshare    7                     Disabled  Weekly    0:00      128       

administrator@cli> 

Expect: all periodsnap of volume type should be listed

periodsnap -t volume
===============================================================================
Id   Type        SourceIDs             Status    SchedType StartTime KeepNumber
===============================================================================
1    volume      0                     Disabled  Daily     0:00      3         
2    volume      1                     Disabled  Daily     1:00      1         
3    volume      2                     Disabled  Daily     2:00      2         
4    volume      3                     Enabled   Daily     3:00      127       
5    volume      4                     Disabled  Daily     4:00      128       
6    volume      5                     Disabled  Daily     5:00      127       
7    volume      6                     Disabled  Daily     6:00      128       
8    volume      7                     Disabled  Daily     7:00      127       
9    volume      8                     Disabled  Daily     8:00      128       
10   volume      9                     Disabled  Daily     9:00      127       
14   volume      10                    Disabled  Weekly    0:00      128       
15   volume      11                    Enabled   Weekly    1:00      127       
16   volume      12                    Disabled  Weekly    2:00      128       

administrator@cli> 

Expect: all periodsnap of nasshare type should be listed

periodsnap -t nasshare
===============================================================================
Id   Type        SourceIDs             Status    SchedType StartTime KeepNumber
===============================================================================
11   nasshare    0                     Disabled  Daily     0:00      1         
12   nasshare    1                     Disabled  Daily     1:00      2         
13   nasshare    2                     Enabled   Daily     18:00     128       
17   nasshare    3                     Enabled   Weekly    20:00     127       
18   nasshare    4                     Disabled  Weekly    21:00     128       
19   nasshare    5                     Disabled  Weekly    22:00     127       
20   nasshare    6                     Disabled  Weekly    23:00     128       
21   nasshare    7                     Disabled  Weekly    0:00      128       

administrator@cli> 

Expect: specific periodsnap of volume shouled be listed

periodsnap -t volume -i 1
===============================================================================
Id   Type        SourceIDs             Status    SchedType StartTime KeepNumber
===============================================================================
1    volume      0                     Disabled  Daily     0:00      3         

administrator@cli> 

Expect: specific periodsnap of nasshare shouled be listed

periodsnap -t nasshare -i 11
===============================================================================
Id   Type        SourceIDs             Status    SchedType StartTime KeepNumber
===============================================================================
11   nasshare    0                     Disabled  Daily     0:00      1         

administrator@cli> 

Expect: specific periodsnap shouled be listed

periodsnap -i 2
===============================================================================
Id   Type        SourceIDs             Status    SchedType StartTime KeepNumber
===============================================================================
2    volume      1                     Disabled  Daily     1:00      1         

administrator@cli> 

Expect: specific periodsnap shouled be listed

periodsnap -i 11
===============================================================================
Id   Type        SourceIDs             Status    SchedType StartTime KeepNumber
===============================================================================
11   nasshare    0                     Disabled  Daily     0:00      1         

administrator@cli> 
'result': 'p'

Expect: all periodsnap of volume type should be listed by verbose mode

periodsnap -v -t volume
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Disabled                        StartTime: 0:00
SchedType: Daily                        KeepNumber: 3
Interval: 30                            EndTime: 5:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 19:39:20
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 
-------------------------------------------------------------------------------
Id: 2                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 1                            SourceNames: test_periodsnap1
Status: Disabled                        StartTime: 1:00
SchedType: Daily                        KeepNumber: 1
Interval: 5                             EndTime: 2:00
CreateTime: 2017-12-14 19:36:24         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 
-------------------------------------------------------------------------------
Id: 3                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 2                            SourceNames: test_periodsnap2
Status: Disabled                        StartTime: 2:00
SchedType: Daily                        KeepNumber: 2
Interval: 10                            EndTime: 3:00
CreateTime: 2017-12-14 19:36:27         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 
-------------------------------------------------------------------------------
Id: 4                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 3                            SourceNames: test_periodsnap3
Status: Enabled                         StartTime: 3:00
SchedType: Daily                        KeepNumber: 127
Interval: 15                            EndTime: 4:00
CreateTime: 2017-12-14 19:36:31         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 
-------------------------------------------------------------------------------
Id: 5                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 4                            SourceNames: test_periodsnap4
Status: Disabled                        StartTime: 4:00
SchedType: Daily                        KeepNumber: 128
Interval: 30                            EndTime: 5:00
CreateTime: 2017-12-14 19:36:34         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 
-------------------------------------------------------------------------------
Id: 6                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 5                            SourceNames: test_periodsnap5
Status: Disabled                        StartTime: 5:00
SchedType: Daily                        KeepNumber: 127
Interval: 60                            EndTime: 6:00
CreateTime: 2017-12-14 19:36:37         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 
-------------------------------------------------------------------------------
Id: 7                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 6                            SourceNames: test_periodsnap6
Status: Disabled                        StartTime: 6:00
SchedType: Daily                        KeepNumber: 128
Interval: 120                           EndTime: 7:00
CreateTime: 2017-12-14 19:36:40         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 
-------------------------------------------------------------------------------
Id: 8                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 7                            SourceNames: test_periodsnap7
Status: Disabled                        StartTime: 7:00
SchedType: Daily                        KeepNumber: 127
Interval: 240                           EndTime: 8:00
CreateTime: 2017-12-14 19:36:44         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 
-------------------------------------------------------------------------------
Id: 9                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 8                            SourceNames: test_periodsnap8
Status: Disabled                        StartTime: 8:00
SchedType: Daily                        KeepNumber: 128
Interval: 360                           EndTime: 9:00
CreateTime: 2017-12-14 19:36:47         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 
-------------------------------------------------------------------------------
Id: 10                                  Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 9                            SourceNames: test_periodsnap9
Status: Disabled                        StartTime: 9:00
SchedType: Daily                        KeepNumber: 127
Interval: 480                           EndTime: 10:00
CreateTime: 2017-12-14 19:36:50         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 
-------------------------------------------------------------------------------
Id: 14                                  Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 10                           SourceNames: test_periodsnap10
Status: Disabled                        StartTime: 0:00
SchedType: Weekly                       KeepNumber: 128
DayOfWeek: Sun                          CreateTime: 2017-12-14 19:37:03
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 
-------------------------------------------------------------------------------
Id: 15                                  Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 11                           SourceNames: test_periodsnap11
Status: Enabled                         StartTime: 1:00
SchedType: Weekly                       KeepNumber: 127
DayOfWeek: Mon                          CreateTime: 2017-12-14 19:37:06
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 
-------------------------------------------------------------------------------
Id: 16                                  Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 12                           SourceNames: test_periodsnap12
Status: Disabled                        StartTime: 2:00
SchedType: Weekly                       KeepNumber: 128
DayOfWeek: Tues                         CreateTime: 2017-12-14 19:37:09
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 

Expect: all periodsnap of nasshare type should be listed by verbose mode

periodsnap -v -t nasshare
-------------------------------------------------------------------------------
Id: 11                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap_0
Status: Disabled                        StartTime: 0:00
SchedType: Daily                        KeepNumber: 1
Interval: 60                            EndTime: 12:00
CreateTime: 2017-12-14 19:36:53         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 
-------------------------------------------------------------------------------
Id: 12                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 1                            SourceNames: test_periodsnap_1
Status: Disabled                        StartTime: 1:00
SchedType: Daily                        KeepNumber: 2
Interval: 60                            EndTime: 6:00
CreateTime: 2017-12-14 19:36:56         ModifyTime: 2017-12-14 19:37:45
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 
-------------------------------------------------------------------------------
Id: 13                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 2                            SourceNames: test_periodsnap_2
Status: Enabled                         StartTime: 18:00
SchedType: Daily                        KeepNumber: 128
Interval: 1440                          EndTime: 19:00
CreateTime: 2017-12-14 19:37:00         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 
-------------------------------------------------------------------------------
Id: 17                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 3                            SourceNames: test_periodsnap_3
Status: Enabled                         StartTime: 20:00
SchedType: Weekly                       KeepNumber: 127
DayOfWeek: Wed                          CreateTime: 2017-12-14 19:37:13
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 
-------------------------------------------------------------------------------
Id: 18                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 4                            SourceNames: test_periodsnap_4
Status: Disabled                        StartTime: 21:00
SchedType: Weekly                       KeepNumber: 128
DayOfWeek: Thur                         CreateTime: 2017-12-14 19:37:16
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 
-------------------------------------------------------------------------------
Id: 19                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 5                            SourceNames: test_periodsnap_5
Status: Disabled                        StartTime: 22:00
SchedType: Weekly                       KeepNumber: 127
DayOfWeek: Fri                          CreateTime: 2017-12-14 19:37:19
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 
-------------------------------------------------------------------------------
Id: 20                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 6                            SourceNames: test_periodsnap_6
Status: Disabled                        StartTime: 23:00
SchedType: Weekly                       KeepNumber: 128
DayOfWeek: Sat Fri                      CreateTime: 2017-12-14 19:37:22
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 
-------------------------------------------------------------------------------
Id: 21                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 7                            SourceNames: test_periodsnap_7
Status: Disabled                        StartTime: 0:00
SchedType: Weekly                       KeepNumber: 128
DayOfWeek: Sun                          CreateTime: 2017-12-14 19:37:26
ModifyTime:                             LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 

Expect: specific periodsnap of volume shouled be listed by verbose mode

periodsnap -v -t volume -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Disabled                        StartTime: 0:00
SchedType: Daily                        KeepNumber: 3
Interval: 30                            EndTime: 5:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 19:39:20
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: specific periodsnap of nasshare shouled be listed by verbose mode

periodsnap -v -t nasshare -i 11
-------------------------------------------------------------------------------
Id: 11                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap_0
Status: Disabled                        StartTime: 0:00
SchedType: Daily                        KeepNumber: 1
Interval: 60                            EndTime: 12:00
CreateTime: 2017-12-14 19:36:53         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: specific periodsnap shouled be listed by verbose mode

periodsnap -v -i 2
-------------------------------------------------------------------------------
Id: 2                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 1                            SourceNames: test_periodsnap1
Status: Disabled                        StartTime: 1:00
SchedType: Daily                        KeepNumber: 1
Interval: 5                             EndTime: 2:00
CreateTime: 2017-12-14 19:36:24         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: specific periodsnap shouled be listed by verbose mode

periodsnap -i 11 -v
-------------------------------------------------------------------------------
Id: 11                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap_0
Status: Disabled                        StartTime: 0:00
SchedType: Daily                        KeepNumber: 1
Interval: 60                            EndTime: 12:00
CreateTime: 2017-12-14 19:36:53         ModifyTime: 
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 
'result': 'p'

Expect: periodsnap should be modified by "interval=5,starthour=23, endhour=22, keepnum=128"

periodsnap -a mod -i 1 -s "interval=5,starthour=23, endhour=22, keepnum=128"

administrator@cli> 
periodsnap -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Disabled                        StartTime: 23:00
SchedType: Daily                        KeepNumber: 128
Interval: 5                             EndTime: 22:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 19:41:39
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=10,starthour=22, endhour=23, keepnum=127"

periodsnap -a mod -i 1 -s "interval=10,starthour=22, endhour=23, keepnum=127"

administrator@cli> 
periodsnap -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Disabled                        StartTime: 22:00
SchedType: Daily                        KeepNumber: 127
Interval: 10                            EndTime: 23:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 19:41:42
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=15,starthour=21, endhour=4, keepnum=126"

periodsnap -a mod -i 1 -s "interval=15,starthour=21, endhour=4, keepnum=126"

administrator@cli> 
periodsnap -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Disabled                        StartTime: 21:00
SchedType: Daily                        KeepNumber: 126
Interval: 15                            EndTime: 4:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 19:41:45
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=30,starthour=0, endhour=5, keepnum=3"

periodsnap -a mod -t volume -i 1 -s "interval=30,starthour=0, endhour=5, keepnum=3"

administrator@cli> 
periodsnap -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Disabled                        StartTime: 0:00
SchedType: Daily                        KeepNumber: 3
Interval: 30                            EndTime: 5:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 19:41:48
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=60,starthour=1, endhour=6, keepnum=2"

periodsnap -a mod -i 12 -s "interval=60,starthour=1, endhour=6, keepnum=2"

administrator@cli> 
periodsnap -v -i 12
-------------------------------------------------------------------------------
Id: 12                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 1                            SourceNames: test_periodsnap_1
Status: Disabled                        StartTime: 1:00
SchedType: Daily                        KeepNumber: 2
Interval: 60                            EndTime: 6:00
CreateTime: 2017-12-14 19:36:56         ModifyTime: 2017-12-14 19:41:51
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=120,starthour=2, endhour=7, keepnum=1"

periodsnap -a mod -i 12 -s "interval=120,starthour=2, endhour=7, keepnum=1"

administrator@cli> 
periodsnap -v -i 12
-------------------------------------------------------------------------------
Id: 12                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 1                            SourceNames: test_periodsnap_1
Status: Disabled                        StartTime: 2:00
SchedType: Daily                        KeepNumber: 1
Interval: 120                           EndTime: 7:00
CreateTime: 2017-12-14 19:36:56         ModifyTime: 2017-12-14 19:41:55
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=240,status=enable"

periodsnap -a mod -i 12 -s "interval=240,status=enable"

administrator@cli> 
periodsnap -v -i 12
-------------------------------------------------------------------------------
Id: 12                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 1                            SourceNames: test_periodsnap_1
Status: Enabled                         StartTime: 2:00
SchedType: Daily                        KeepNumber: 1
Interval: 240                           EndTime: 7:00
CreateTime: 2017-12-14 19:36:56         ModifyTime: 2017-12-14 19:41:58
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=360,status=enable"

periodsnap -a mod -t nasshare  -i 12 -s "interval=360,status=enable"

administrator@cli> 
periodsnap -v -i 12
-------------------------------------------------------------------------------
Id: 12                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 1                            SourceNames: test_periodsnap_1
Status: Enabled                         StartTime: 2:00
SchedType: Daily                        KeepNumber: 1
Interval: 360                           EndTime: 7:00
CreateTime: 2017-12-14 19:36:56         ModifyTime: 2017-12-14 19:42:01
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=480,status=disable"

periodsnap -a mod -i 1 -s "interval=480,status=disable"

administrator@cli> 
periodsnap -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Disabled                        StartTime: 0:00
SchedType: Daily                        KeepNumber: 3
Interval: 480                           EndTime: 5:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 19:42:04
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=720,status=disable"

periodsnap -a mod -i 1 -s "interval=720,status=disable"

administrator@cli> 
periodsnap -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Disabled                        StartTime: 0:00
SchedType: Daily                        KeepNumber: 3
Interval: 720                           EndTime: 5:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 19:42:08
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=1440,status=enable"

periodsnap -a mod -i 1 -s "interval=1440,status=enable"

administrator@cli> 
periodsnap -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Enabled                         StartTime: 0:00
SchedType: Daily                        KeepNumber: 3
Interval: 1440                          EndTime: 5:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 19:42:11
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "recurtype=weekly"

periodsnap -a mod -i 11 -s "recurtype=weekly"

administrator@cli> 
periodsnap -v -i 11
-------------------------------------------------------------------------------
Id: 11                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap_0
Status: Disabled                        StartTime: 0:00
SchedType: Weekly                       KeepNumber: 1
DayOfWeek: Sun                          CreateTime: 2017-12-14 19:36:53
ModifyTime: 2017-12-14 19:42:14         LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "recurtype=daily"

periodsnap -a mod -i 16 -s "recurtype=daily"

administrator@cli> 
periodsnap -v -i 16
-------------------------------------------------------------------------------
Id: 16                                  Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 12                           SourceNames: test_periodsnap12
Status: Disabled                        StartTime: 2:00
SchedType: Daily                        KeepNumber: 128
Interval: 60                            EndTime: 23:00
CreateTime: 2017-12-14 19:37:09         ModifyTime: 2017-12-14 19:42:17
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "dow=thur fri sat,sataus=enable,starthour=0"

periodsnap -a mod -i 15 -s "dow=thur fri sat,status=enable,starthour=0"

administrator@cli> 
periodsnap -v -i 15
-------------------------------------------------------------------------------
Id: 15                                  Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 11                           SourceNames: test_periodsnap11
Status: Enabled                         StartTime: 0:00
SchedType: Weekly                       KeepNumber: 127
DayOfWeek: Thur Fri Sat                 CreateTime: 2017-12-14 19:37:06
ModifyTime: 2017-12-14 19:42:20         LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "dow=sun mon tues wed,sataus=disable,starthour=23"

periodsnap -a mod -i 18 -s "dow=sun mon tues wed,status=disable,starthour=23"

administrator@cli> 
periodsnap -v -i 18
-------------------------------------------------------------------------------
Id: 18                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 4                            SourceNames: test_periodsnap_4
Status: Disabled                        StartTime: 23:00
SchedType: Weekly                       KeepNumber: 128
DayOfWeek: Sun Mon Tues Wed             CreateTime: 2017-12-14 19:37:16
ModifyTime: 2017-12-14 19:42:24         LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 
'result': 'p'

Expect: periodsnap should be modified by "interval=5,starthour=23, endhour=22, keepnum=128"

periodsnap -a mod -i 1 -s "interval=5,starthour=23, endhour=22, keepnum=128"

administrator@cli> 
periodsnap -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Enabled                         StartTime: 23:00
SchedType: Daily                        KeepNumber: 128
Interval: 5                             EndTime: 22:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 21:39:40
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=10,starthour=22, endhour=23, keepnum=127"

periodsnap -a mod -i 1 -s "interval=10,starthour=22, endhour=23, keepnum=127"

administrator@cli> 
periodsnap -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Enabled                         StartTime: 22:00
SchedType: Daily                        KeepNumber: 127
Interval: 10                            EndTime: 23:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 21:39:44
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=15,starthour=21, endhour=4, keepnum=126"

periodsnap -a mod -i 1 -s "interval=15,starthour=21, endhour=4, keepnum=126"

administrator@cli> 
periodsnap -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Enabled                         StartTime: 21:00
SchedType: Daily                        KeepNumber: 126
Interval: 15                            EndTime: 4:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 21:39:47
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=30,starthour=0, endhour=5, keepnum=3"

periodsnap -a mod -t volume -i 1 -s "interval=30,starthour=0, endhour=5, keepnum=3"

administrator@cli> 
periodsnap -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Enabled                         StartTime: 0:00
SchedType: Daily                        KeepNumber: 3
Interval: 30                            EndTime: 5:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 21:39:50
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=60,starthour=1, endhour=6, keepnum=2"

periodsnap -a mod -i 12 -s "interval=60,starthour=1, endhour=6, keepnum=2"

administrator@cli> 
periodsnap -v -i 12
-------------------------------------------------------------------------------
Id: 12                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 1                            SourceNames: test_periodsnap_1
Status: Enabled                         StartTime: 1:00
SchedType: Daily                        KeepNumber: 2
Interval: 60                            EndTime: 6:00
CreateTime: 2017-12-14 19:36:56         ModifyTime: 2017-12-14 21:39:53
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=120,starthour=2, endhour=7, keepnum=1"

periodsnap -a mod -i 12 -s "interval=120,starthour=2, endhour=7, keepnum=1"

administrator@cli> 
periodsnap -v -i 12
-------------------------------------------------------------------------------
Id: 12                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 1                            SourceNames: test_periodsnap_1
Status: Enabled                         StartTime: 2:00
SchedType: Daily                        KeepNumber: 1
Interval: 120                           EndTime: 7:00
CreateTime: 2017-12-14 19:36:56         ModifyTime: 2017-12-14 21:39:56
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=240,status=enable"

periodsnap -a mod -i 12 -s "interval=240,status=enable"

administrator@cli> 
periodsnap -v -i 12
-------------------------------------------------------------------------------
Id: 12                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 1                            SourceNames: test_periodsnap_1
Status: Enabled                         StartTime: 2:00
SchedType: Daily                        KeepNumber: 1
Interval: 240                           EndTime: 7:00
CreateTime: 2017-12-14 19:36:56         ModifyTime: 2017-12-14 21:40:00
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=360,status=enable"

periodsnap -a mod -t nasshare  -i 12 -s "interval=360,status=enable"

administrator@cli> 
periodsnap -v -i 12
-------------------------------------------------------------------------------
Id: 12                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 1                            SourceNames: test_periodsnap_1
Status: Enabled                         StartTime: 2:00
SchedType: Daily                        KeepNumber: 1
Interval: 360                           EndTime: 7:00
CreateTime: 2017-12-14 19:36:56         ModifyTime: 2017-12-14 21:40:03
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=480,status=disable"

periodsnap -a mod -i 1 -s "interval=480,status=disable"

administrator@cli> 
periodsnap -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Disabled                        StartTime: 0:00
SchedType: Daily                        KeepNumber: 3
Interval: 480                           EndTime: 5:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 21:40:06
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=720,status=disable"

periodsnap -a mod -i 1 -s "interval=720,status=disable"

administrator@cli> 
periodsnap -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Disabled                        StartTime: 0:00
SchedType: Daily                        KeepNumber: 3
Interval: 720                           EndTime: 5:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 21:40:09
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "interval=1440,status=enable"

periodsnap -a mod -i 1 -s "interval=1440,status=enable"

administrator@cli> 
periodsnap -v -i 1
-------------------------------------------------------------------------------
Id: 1                                   Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap0
Status: Enabled                         StartTime: 0:00
SchedType: Daily                        KeepNumber: 3
Interval: 1440                          EndTime: 5:00
CreateTime: 2017-12-14 19:36:21         ModifyTime: 2017-12-14 21:40:13
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "recurtype=weekly"

periodsnap -a mod -i 11 -s "recurtype=weekly"

administrator@cli> 
periodsnap -v -i 11
-------------------------------------------------------------------------------
Id: 11                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 0                            SourceNames: test_periodsnap_0
Status: Disabled                        StartTime: 0:00
SchedType: Weekly                       KeepNumber: 1
DayOfWeek: Sun                          CreateTime: 2017-12-14 19:36:53
ModifyTime: 2017-12-14 21:40:16         LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "recurtype=daily"

periodsnap -a mod -i 16 -s "recurtype=daily"

administrator@cli> 
periodsnap -v -i 16
-------------------------------------------------------------------------------
Id: 16                                  Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 12                           SourceNames: test_periodsnap12
Status: Disabled                        StartTime: 2:00
SchedType: Daily                        KeepNumber: 128
Interval: 60                            EndTime: 23:00
CreateTime: 2017-12-14 19:37:09         ModifyTime: 2017-12-14 21:40:19
LastExecTime:                           LastExecResult: Success
OperationalStatus: OK                   SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "dow=thur fri sat,sataus=enable,starthour=0"

periodsnap -a mod -i 15 -s "dow=thur fri sat,status=enable,starthour=0"

administrator@cli> 
periodsnap -v -i 15
-------------------------------------------------------------------------------
Id: 15                                  Type: volume
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 11                           SourceNames: test_periodsnap11
Status: Enabled                         StartTime: 0:00
SchedType: Weekly                       KeepNumber: 127
DayOfWeek: Thur Fri Sat                 CreateTime: 2017-12-14 19:37:06
ModifyTime: 2017-12-14 21:40:22         LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 

Expect: periodsnap should be modified by "dow=sun mon tues wed,sataus=disable,starthour=23"

periodsnap -a mod -i 18 -s "dow=sun mon tues wed,status=disable,starthour=23"

administrator@cli> 
periodsnap -v -i 18
-------------------------------------------------------------------------------
Id: 18                                  Type: nasshare
PoolId: 0                               PoolName: test_periodsnap_pool
SourceIDs: 4                            SourceNames: test_periodsnap_4
Status: Disabled                        StartTime: 23:00
SchedType: Weekly                       KeepNumber: 128
DayOfWeek: Sun Mon Tues Wed             CreateTime: 2017-12-14 19:37:16
ModifyTime: 2017-12-14 21:40:25         LastExecTime: 
LastExecResult: Success                 OperationalStatus: OK
SnapIdList: 

administrator@cli> 
'result': 'p'

Expect: periodsnap 2 should be deleted

periodsnap -a del -i 2

administrator@cli> 
periodsnap -a list -t volume
===============================================================================
Id   Type        SourceIDs             Status    SchedType StartTime KeepNumber
===============================================================================
1    volume      0                     Enabled   Daily     0:00      3         
3    volume      2                     Disabled  Daily     2:00      2         
4    volume      3                     Enabled   Daily     3:00      127       
5    volume      4                     Disabled  Daily     4:00      128       
6    volume      5                     Disabled  Daily     5:00      127       
7    volume      6                     Disabled  Daily     6:00      128       
8    volume      7                     Disabled  Daily     7:00      127       
9    volume      8                     Disabled  Daily     8:00      128       
10   volume      9                     Disabled  Daily     9:00      127       
14   volume      10                    Disabled  Weekly    0:00      128       
15   volume      11                    Enabled   Weekly    0:00      127       
16   volume      12                    Disabled  Daily     2:00      128       

administrator@cli> 

Expect: periodsnap 14 should be deleted

periodsnap -a del -i 14

administrator@cli> 
periodsnap -a list -t volume
===============================================================================
Id   Type        SourceIDs             Status    SchedType StartTime KeepNumber
===============================================================================
1    volume      0                     Enabled   Daily     0:00      3         
3    volume      2                     Disabled  Daily     2:00      2         
4    volume      3                     Enabled   Daily     3:00      127       
5    volume      4                     Disabled  Daily     4:00      128       
6    volume      5                     Disabled  Daily     5:00      127       
7    volume      6                     Disabled  Daily     6:00      128       
8    volume      7                     Disabled  Daily     7:00      127       
9    volume      8                     Disabled  Daily     8:00      128       
10   volume      9                     Disabled  Daily     9:00      127       
15   volume      11                    Enabled   Weekly    0:00      127       
16   volume      12                    Disabled  Daily     2:00      128       

administrator@cli> 

Expect: periodsnap 12 should be deleted

periodsnap -a del -i 12

administrator@cli> 
periodsnap -t nasshare
===============================================================================
Id   Type        SourceIDs             Status    SchedType StartTime KeepNumber
===============================================================================
11   nasshare    0                     Disabled  Weekly    0:00      1         
13   nasshare    2                     Enabled   Daily     18:00     128       
17   nasshare    3                     Enabled   Weekly    20:00     127       
18   nasshare    4                     Disabled  Weekly    23:00     128       
19   nasshare    5                     Disabled  Weekly    22:00     127       
20   nasshare    6                     Disabled  Weekly    23:00     128       
21   nasshare    7                     Disabled  Weekly    0:00      128       

administrator@cli> 

Expect: periodsnap 21 should be deleted

periodsnap -a del -i 21

administrator@cli> 
periodsnap -t nasshare
===============================================================================
Id   Type        SourceIDs             Status    SchedType StartTime KeepNumber
===============================================================================
11   nasshare    0                     Disabled  Weekly    0:00      1         
13   nasshare    2                     Enabled   Daily     18:00     128       
17   nasshare    3                     Enabled   Weekly    20:00     127       
18   nasshare    4                     Disabled  Weekly    23:00     128       
19   nasshare    5                     Disabled  Weekly    22:00     127       
20   nasshare    6                     Disabled  Weekly    23:00     128       

administrator@cli> 
'result': 'p'

Expect: Invalid setting parameters

periodsnap test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -t test
Error (0x2013): Invalid setting parameters
-t: invalid setting test (volume|nasshare)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -t nasshare test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -t volume test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a test
Error (0x2013): Invalid setting parameters
-a: invalid setting test (list|add|mod|del)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t volume -d test
Error (0x2013): Invalid setting parameters
-d: invalid setting test

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s test
Error (0x2013): Invalid setting parameters
invalid option: ['test']

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=test,starthour=2, endhour=3, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
interval: invalid setting test (5|10|15|30|60|120|240|360|480|720|1440)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=0,starthour=2, endhour=3, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
interval: invalid setting 0 (5|10|15|30|60|120|240|360|480|720|1440)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=1441,starthour=2, endhour=3, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
interval: invalid setting 1441 (5|10|15|30|60|120|240|360|480|720|1440)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=5,starthour=test, endhour=3, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
starthour: invalid setting test

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=5,starthour=-1, endhour=3, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
starthour: invalid setting -1 (0,23)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=5,starthour=24, endhour=3, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
starthour: invalid setting 24 (0,23)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=5,starthour=2, endhour=test, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
endhour: invalid setting test

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=5,starthour=2, endhour=-1, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
endhour: invalid setting -1 (0,23)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=5,starthour=2, endhour=24, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
endhour: invalid setting 24 (0,23)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=5,starthour=2, endhour=2, keepnum=test,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
keepnum: invalid setting test

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=5,starthour=2, endhour=2, keepnum=0,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
keepnum: invalid setting 0 (1,128)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=5,starthour=2, endhour=2, keepnum=129,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
keepnum: invalid setting 129 (1,128)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=5,starthour=2, endhour=2, keepnum=12,status=test,recurtype=daily"
Error (0x2013): Invalid setting parameters
status: invalid setting test (enable|disable)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=5,starthour=2, endhour=2, keepnum=12,status=1,recurtype=daily"
Error (0x2013): Invalid setting parameters
status: invalid setting 1 (enable|disable)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=5,starthour=2, endhour=2, keepnum=12,status=0,recurtype=daily"
Error (0x2013): Invalid setting parameters
status: invalid setting 0 (enable|disable)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t nasshare -d 9 -s "interval=5,starthour=2, endhour=2, keepnum=12,status=enable,recurtype=test"
Error (0x2013): Invalid setting parameters
recurtype: invalid setting test (daily|weekly)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a add -t volume -d 14 -s "starthour=2,keepnum=12,status=enable,recurtype=weekly,dow=test"
Error (0x2013): Invalid setting parameters
invalid dow option (Sun|Mon|Tues|Wed|Thur|Fri|Sat) devided by ' '

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s ""
Error (0x2013): Invalid setting parameters
invalid comma: ','

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=test,starthour=2, endhour=3, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
interval: invalid setting test (5|10|15|30|60|120|240|360|480|720|1440)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=0,starthour=2, endhour=3, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
interval: invalid setting 0 (5|10|15|30|60|120|240|360|480|720|1440)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=1441,starthour=2, endhour=3, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
interval: invalid setting 1441 (5|10|15|30|60|120|240|360|480|720|1440)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=5,starthour=test, endhour=3, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
starthour: invalid setting test

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=5,starthour=-1, endhour=3, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
starthour: invalid setting -1 (0,23)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=5,starthour=24, endhour=3, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
starthour: invalid setting 24 (0,23)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=5,starthour=2, endhour=test, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
endhour: invalid setting test

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=5,starthour=2, endhour=-1, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
endhour: invalid setting -1 (0,23)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=5,starthour=2, endhour=24, keepnum=2,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
endhour: invalid setting 24 (0,23)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=5,starthour=2, endhour=2, keepnum=test,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
keepnum: invalid setting test

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=5,starthour=2, endhour=2, keepnum=0,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
keepnum: invalid setting 0 (1,128)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=5,starthour=2, endhour=2, keepnum=129,status=disable,recurtype=daily"
Error (0x2013): Invalid setting parameters
keepnum: invalid setting 129 (1,128)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=5,starthour=2, endhour=2, keepnum=12,status=test,recurtype=daily"
Error (0x2013): Invalid setting parameters
status: invalid setting test (enable|disable)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=5,starthour=2, endhour=2, keepnum=12,status=1,recurtype=daily"
Error (0x2013): Invalid setting parameters
status: invalid setting 1 (enable|disable)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=5,starthour=2, endhour=2, keepnum=12,status=0,recurtype=daily"
Error (0x2013): Invalid setting parameters
status: invalid setting 0 (enable|disable)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 1 -s "interval=5,starthour=2, endhour=2, keepnum=12,status=enable,recurtype=test"
Error (0x2013): Invalid setting parameters
recurtype: invalid setting test (daily|weekly)

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a mod -i 20 -s "starthour=2,keepnum=12,status=enable,recurtype=weekly,dow=test"
Error (0x2013): Invalid setting parameters
invalid dow option (Sun|Mon|Tues|Wed|Thur|Fri|Sat) devided by ' '

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a del test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

periodsnap -a del -i test
Error (0x2013): Invalid setting parameters
-i: invalid setting test

administrator@cli> 
'result': 'p'

Expect: Invalid option for the command or the action

periodsnap -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

periodsnap -a add -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

periodsnap -a add -t nasshare -d 9 -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

periodsnap -a add -t nasshare -d 9 -s "test=test,starthour=2, endhour=3, keepnum=2"
Error (0x2012): Invalid option for the command or the action
-s: invalid option: test

administrator@cli> 

Expect: Invalid option for the command or the action

periodsnap -a add -t volume -d 14 -s "test=2,starthour=2, endhour=3, keepnum=12"
Error (0x2012): Invalid option for the command or the action
-s: invalid option: test

administrator@cli> 

Expect: Invalid option for the command or the action

periodsnap -a mod -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

periodsnap -a mod -i 1 -s "test=test"
Error (0x2012): Invalid option for the command or the action
-s: invalid option: test

administrator@cli> 

Expect: Invalid option for the command or the action

periodsnap -a del -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 
'result': 'p'

Expect: Missing parameter

periodsnap -t 
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 

Expect: Missing parameter

periodsnap -t nasshare -i
Error (0x403): Missing parameter
-i: missing value

administrator@cli> 

Expect: Missing parameter

periodsnap -t volume -i
Error (0x403): Missing parameter
-i: missing value

administrator@cli> 

Expect: Missing parameter

periodsnap -a add
Error (0x403): Missing parameter
missing parameter '-t' for '-a add'

administrator@cli> 

Expect: Missing parameter

periodsnap -a add -t 
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 

Expect: Missing parameter

periodsnap -a add -t nasshare 
Error (0x403): Missing parameter
missing parameter '-s' for '-a add'

administrator@cli> 

Expect: Missing parameter

periodsnap -a add -t nasshare -d 9 
Error (0x403): Missing parameter
missing parameter '-s' for '-a add'

administrator@cli> 

Expect: Missing parameter

periodsnap -a add -t nasshare -d 9 -s 
Error (0x403): Missing parameter
-s: missing value

administrator@cli> 

Expect: Missing parameter

periodsnap -a add -t volume -d 14 -s
Error (0x403): Missing parameter
-s: missing value

administrator@cli> 

Expect: Missing parameter

periodsnap -a mod
Error (0x403): Missing parameter
missing parameter '-s' for '-a mod'

administrator@cli> 

Expect: Missing parameter

periodsnap -a mod -i 
Error (0x403): Missing parameter
-i: missing value

administrator@cli> 

Expect: Missing parameter

periodsnap -a mod -i 1 
Error (0x403): Missing parameter
missing parameter '-s' for '-a mod'

administrator@cli> 

Expect: Missing parameter

periodsnap -a mod -i 1 -s 
Error (0x403): Missing parameter
-s: missing value

administrator@cli> 

Expect: Missing parameter

periodsnap -a del
Error (0x403): Missing parameter
missing parameter '-i' for '-a del'

administrator@cli> 

Expect: Missing parameter

periodsnap -a del -i
Error (0x403): Missing parameter
-i: missing value

administrator@cli> 
'result': 'p'

Expect: specific nas user should have 1GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=1GB,name=test_quota_0"

administrator@cli> 
quota -v -d 0 -t nasshare
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1003                               Limit: 1 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 2GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=2GB,name=test_quota_0"

administrator@cli> 
quota -v -d 0 -t nasshare
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1003                               Limit: 2 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 998GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=user,limit=998GB,name=test_quota_2"

administrator@cli> 
quota -v -d 1 -t nasshare
-------------------------------------------------------------------------------
Name: test_quota_2                      AccountType: User
Uid: 1005                               Limit: 998 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 999GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=user,limit=999GB,name=test_quota_3"

administrator@cli> 
quota -v -d 1 -t nasshare
-------------------------------------------------------------------------------
Name: test_quota_2                      AccountType: User
Uid: 1005                               Limit: 998 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_3                      AccountType: User
Uid: 1006                               Limit: 999 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 1000GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=1000GB,name=test_quota_4"

administrator@cli> 
quota -v -d 0 -t nasshare
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1003                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_4                      AccountType: User
Uid: 1007                               Limit: 1 TB
Used: 0 Byte                            Status: Ready

administrator@cli> 
'result': 'p'

Expect: specific nas user should have 1GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=1GB,name=test_quota_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1003                               Limit: 1 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 2GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=2GB,name=test_quota_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1003                               Limit: 2 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 3GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=3GB,name=test_quota_1"

administrator@cli> 
quota -v -d 1
No quota found on nasshare 1

administrator@cli> 

Fail: please check out Name: test_quota_0


Fail: please check out AccountType: User


Fail: please check out Limit: 2 GB


Fail: please check out Status: Ready


Expect: specific nas user should have 998GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=998GB,name=test_quota_group_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1003                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_1                      AccountType: User
Uid: 1004                               Limit: 3 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Fail: please check out Name: test_quota_group_0


Fail: please check out AccountType: Group


Fail: please check out Limit: 998 GB


Expect: specific nas user should have 999GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=999GB,name=test_quota_group_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1003                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_1                      AccountType: User
Uid: 1004                               Limit: 3 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Fail: please check out Name: test_quota_group_0


Fail: please check out AccountType: Group


Fail: please check out Limit: 999 GB


Expect: specific nas user should have 1000GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=group,limit=1000GB,name=test_quota_group_1"

administrator@cli> 
quota -v -d 1
-------------------------------------------------------------------------------
Name: test_quota_group_0                AccountType: Group
Gid: 1003                               Limit: 999 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Fail: please check out Name: test_quota_group_1


Fail: please check out Limit: 1 TB

'result': 'f'

Expect: specific nas user should have 1GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=1GB,name=test_quota_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1003                               Limit: 1 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 2GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=2GB,name=test_quota_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1003                               Limit: 2 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 3GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=3GB,name=test_quota_1"

administrator@cli> 
quota -v -d 1
No quota found on nasshare 1

administrator@cli> 

Fail: please check out Name: test_quota_0


Fail: please check out AccountType: User


Fail: please check out Limit: 2 GB


Fail: please check out Status: Ready


Expect: specific nas user should have 998GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=998GB,name=test_quota_group_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1003                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_1                      AccountType: User
Uid: 1004                               Limit: 3 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Fail: please check out Name: test_quota_group_0


Fail: please check out AccountType: Group


Fail: please check out Limit: 998 GB


Expect: specific nas user should have 999GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=999GB,name=test_quota_group_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1003                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_1                      AccountType: User
Uid: 1004                               Limit: 3 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Fail: please check out Name: test_quota_group_0


Fail: please check out AccountType: Group


Fail: please check out Limit: 999 GB


Expect: specific nas user should have 1000GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=group,limit=1000GB,name=test_quota_group_1"

administrator@cli> 
quota -v -d 1
-------------------------------------------------------------------------------
Name: test_quota_group_0                AccountType: Group
Gid: 1003                               Limit: 999 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Fail: please check out Name: test_quota_group_1


Fail: please check out Limit: 1 TB

'result': 'f'

Expect: specific nas user should have 1GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=1GB,name=test_quota_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1003                               Limit: 1 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 2GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=2GB,name=test_quota_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1003                               Limit: 2 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 3GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=3GB,name=test_quota_1"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1003                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_1                      AccountType: User
Uid: 1004                               Limit: 3 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 998GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=998GB,name=test_quota_group_0"

administrator@cli> 
quota -v -d 1
-------------------------------------------------------------------------------
Name: test_quota_group_0                AccountType: Group
Gid: 1003                               Limit: 998 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 999GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=999GB,name=test_quota_group_0"

administrator@cli> 
quota -v -d 1
-------------------------------------------------------------------------------
Name: test_quota_group_0                AccountType: Group
Gid: 1003                               Limit: 999 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 1000GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=1000GB,name=test_quota_group_1"

administrator@cli> 
quota -v -d 1
-------------------------------------------------------------------------------
Name: test_quota_group_0                AccountType: Group
Gid: 1003                               Limit: 999 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_group_1                AccountType: Group
Gid: 1004                               Limit: 1 TB
Used: 0 Byte                            Status: Ready

administrator@cli> 
'result': 'p'

Expect: list all of quota on nasshare 0

quota
===============================================================================
Name                    Limit           Used             AccountType           
===============================================================================
test_quota_0            2 GB            0 Byte           User                  
test_quota_1            3 GB            0 Byte           User                  

administrator@cli> 

Expect: list all of quota on nasshare 0

quota -d 0 -t nasshare
===============================================================================
Name                    Limit           Used             AccountType           
===============================================================================
test_quota_0            2 GB            0 Byte           User                  
test_quota_1            3 GB            0 Byte           User                  

administrator@cli> 

Expect: list all of quota on nasshare 1

quota -d 1
===============================================================================
Name                        Limit           Used           AccountType         
===============================================================================
test_quota_group_0          999 GB          0 Byte         Group               
test_quota_group_1          1 TB            0 Byte         Group               

administrator@cli> 
'result': 'p'

Expect: specific nas user should have 1GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=1GB,name=test_quota_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 1 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 2GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=2GB,name=test_quota_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 2 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 3GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=3GB,name=test_quota_1"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_1                      AccountType: User
Uid: 1002                               Limit: 3 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 998GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=998GB,name=test_quota_group_0"

administrator@cli> 
quota -v -d 1
-------------------------------------------------------------------------------
Name: test_quota_group_0                AccountType: Group
Gid: 1003                               Limit: 998 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 999GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=999GB,name=test_quota_group_0"

administrator@cli> 
quota -v -d 1
-------------------------------------------------------------------------------
Name: test_quota_group_0                AccountType: Group
Gid: 1003                               Limit: 999 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 1000GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=1000GB,name=test_quota_group_1"

administrator@cli> 
quota -v -d 1
-------------------------------------------------------------------------------
Name: test_quota_group_0                AccountType: Group
Gid: 1003                               Limit: 999 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_group_1                AccountType: Group
Gid: 1004                               Limit: 1 TB
Used: 0 Byte                            Status: Ready

administrator@cli> 
'result': 'p'

Expect: list all of quota on nasshare 0

quota
===============================================================================
Name                    Limit           Used             AccountType           
===============================================================================
test_quota_0            2 GB            0 Byte           User                  
test_quota_1            3 GB            0 Byte           User                  

administrator@cli> 

Expect: list all of quota on nasshare 0

quota -d 0 -t nasshare
===============================================================================
Name                    Limit           Used             AccountType           
===============================================================================
test_quota_0            2 GB            0 Byte           User                  
test_quota_1            3 GB            0 Byte           User                  

administrator@cli> 

Expect: list all of quota on nasshare 1

quota -d 1
===============================================================================
Name                        Limit           Used           AccountType         
===============================================================================
test_quota_group_0          999 GB          0 Byte         Group               
test_quota_group_1          1 TB            0 Byte         Group               

administrator@cli> 
'result': 'p'

Expect: list all of quota by verbose mode

quota -v
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_1                      AccountType: User
Uid: 1002                               Limit: 3 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: list quota of nasshare type by verbose mode

quota -v -d 0 -t nasshare
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_1                      AccountType: User
Uid: 1002                               Limit: 3 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 
'result': 'p'

Expect: refresh quota of nasshare type

quota -a refresh -d 0 -t nasshare

administrator@cli> 
'result': 'p'

Expect: precondition: add quota

quota -a set -d 0 -t nasshare -s "role=user,limit=1GB,name=test_quota_6"

administrator@cli> 

Expect: to add quota should be canceled

quota -a cancel -d 0 -t nasshare
Error (0x4100104): Incorrect parameters: There is running task now.

administrator@cli> 

Fail: quota -a cancel -d 0 -t nasshare


Expect: user test_quota_6 is not in quota list

quota -t nasshare -d 0
===============================================================================
Name                    Limit           Used             AccountType           
===============================================================================
test_quota_0            2 GB            0 Byte           User                  
test_quota_1            3 GB            0 Byte           User                  
test_quota_6            1 GB            0 Byte           User                  

administrator@cli> 
'result': 'f'

Expect: quota of user for test_quota_0 should be deleted

quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0"
Error (0x4100104): Incorrect parameters: There is editing/running task now.

administrator@cli> 

Fail: quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0"

'result': 'f'

Expect: Invalid setting parameters

quota test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

quota -d test
Error (0x2013): Invalid setting parameters
-d: invalid setting test

administrator@cli> 

Expect: Invalid setting parameters

quota -d 100 -t test
Error (0x2013): Invalid setting parameters
-t: invalid setting test (nasshare)

administrator@cli> 

Expect: Invalid setting parameters

quota -a test
Error (0x2013): Invalid setting parameters
-a: invalid setting test (list|set|refresh)

administrator@cli> 

Expect: Invalid setting parameters

quota -a set -d 0 -t test -s "role=user,name=admin,limit=1GB"
Error (0x2013): Invalid setting parameters
-t: invalid setting test (nasshare)

administrator@cli> 

Expect: NAS Share id=[100] is not existed

quota -a set -d 100 -t nasshare -s "role=user,name=test_quota_0,limit=1GB"
Error (0x4100102): Empty query result, please check input parameters. NAS Share id=[100] is not existed.

administrator@cli> 

Expect: Invalid setting parameters

quota -a set -d 0 -t nasshare -s "role=test,name=test_quota_0,limit=1GB"
Error (0x2013): Invalid setting parameters
role: invalid setting test (user)

administrator@cli> 

Expect: NAS user [test] doesn't exist

quota -a set -d 0 -t nasshare -s "role=user,name=test,limit=1GB"
Error (0x4100104): Incorrect parameters: NAS user [test] doesn't exist.

administrator@cli> 

Expect: Invalid setting parameters

quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0,limit=test"
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: out of space

quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0,limit=100TB"

administrator@cli> 

Fail: quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0,limit=100TB"


Expect: Invalid setting parameters

quota -a refresh test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

quota -a refresh -t test
Error (0x2013): Invalid setting parameters
-t: invalid setting test (nasshare)

administrator@cli> 

Expect: Invalid setting parameters

quota -a set -d 0 -t nasshare -s ""
Error (0x2013): Invalid setting parameters
invalid comma: ','

administrator@cli> 

Expect: Can't do quota on user admin

quota -a set -d 0 -t nasshare -s "role=user,limit=1GB,name=admin"
Error (0x402): Invalid parameter
Can't do quota on user admin.

administrator@cli> 

Expect: Can't set quota to default group [users]

quota -a set -d 0 -t nasshare -s "role=group,name=users,limit=1GB"
Error (0x4100104): Incorrect parameters: Can't set quota to default group [users].

administrator@cli> 
'result': 'f'

Expect: Invalid option for the command or the action

quota -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -d 0 -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -test -s "role=user,name=test_quota_0,limit=1GB"
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -t nasshare -s "test=user,name=test_quota_0,limit=1GB"
Error (0x2012): Invalid option for the command or the action
-s: invalid option: test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -t nasshare -s "role=user,test=test_quota_0,limit=1GB"
Error (0x2012): Invalid option for the command or the action
-s: invalid option: test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0,test=1GB"
Error (0x2012): Invalid option for the command or the action
-s: invalid option: test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a refresh -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 
'result': 'p'

Expect: Missing parameter

quota -d
Error (0x403): Missing parameter
-d: missing value

administrator@cli> 

Expect: Missing parameter

quota -d 0 -t
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 

Expect: Missing parameter

quota -a
Error (0x403): Missing parameter
-a: missing value

administrator@cli> 

Expect: Missing parameter

quota -a set -d
Error (0x403): Missing parameter
-d: missing value

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 
Error (0x403): Missing parameter
missing parameter '-t' for '-a set'

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t 
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t nasshare 
Error (0x403): Missing parameter
missing parameter '-s' for '-a set'

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t nasshare -s
Error (0x403): Missing parameter
-s: missing value

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t clone
Error (0x403): Missing parameter
missing parameter '-s' for '-a set'

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t clone -s
Error (0x403): Missing parameter
-s: missing value

administrator@cli> 

Expect: Missing parameter

quota -a refresh
Error (0x403): Missing parameter
missing parameter '-t' for '-a refresh'

administrator@cli> 

Expect: Missing parameter

quota -a refresh -d
Error (0x403): Missing parameter
-d: missing value

administrator@cli> 

Expect: Missing parameter

quota -a refresh -d 0 -t
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 
'result': 'p'

Expect: specific nas user should have 1GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=1GB,name=test_quota_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 1 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 2GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=2GB,name=test_quota_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 2 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 3GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=3GB,name=test_quota_1"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_1                      AccountType: User
Uid: 1002                               Limit: 3 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 998GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=998GB,name=test_quota_group_0"

administrator@cli> 
quota -v -d 1
-------------------------------------------------------------------------------
Name: test_quota_group_0                AccountType: Group
Gid: 1001                               Limit: 998 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 999GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=999GB,name=test_quota_group_0"

administrator@cli> 
quota -v -d 1
-------------------------------------------------------------------------------
Name: test_quota_group_0                AccountType: Group
Gid: 1001                               Limit: 999 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 1000GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=1000GB,name=test_quota_group_1"

administrator@cli> 
quota -v -d 1
-------------------------------------------------------------------------------
Name: test_quota_group_0                AccountType: Group
Gid: 1001                               Limit: 999 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_group_1                AccountType: Group
Gid: 1002                               Limit: 1 TB
Used: 0 Byte                            Status: Ready

administrator@cli> 
'result': 'p'

Expect: list all of quota on nasshare 0

quota
===============================================================================
Name                    Limit           Used             AccountType           
===============================================================================
test_quota_0            2 GB            0 Byte           User                  
test_quota_1            3 GB            0 Byte           User                  

administrator@cli> 

Expect: list all of quota on nasshare 0

quota -d 0 -t nasshare
===============================================================================
Name                    Limit           Used             AccountType           
===============================================================================
test_quota_0            2 GB            0 Byte           User                  
test_quota_1            3 GB            0 Byte           User                  

administrator@cli> 

Expect: list all of quota on nasshare 1

quota -d 1
===============================================================================
Name                        Limit           Used           AccountType         
===============================================================================
test_quota_group_0          999 GB          0 Byte         Group               
test_quota_group_1          1 TB            0 Byte         Group               

administrator@cli> 
'result': 'p'

Expect: list all of quota by verbose mode

quota -v
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_1                      AccountType: User
Uid: 1002                               Limit: 3 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: list quota of nasshare type by verbose mode

quota -v -d 0 -t nasshare
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_1                      AccountType: User
Uid: 1002                               Limit: 3 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 
'result': 'p'

Expect: refresh quota of nasshare type

quota -a refresh -d 0 -t nasshare

administrator@cli> 
'result': 'p'

Expect: precondition: add quota

quota -a set -d 0 -t nasshare -s "role=user,limit=1GB,name=test_quota_6"

administrator@cli> 

Expect: to add quota should be canceled

quota -a cancel -d 0 -t nasshare
Error (0x4100104): Incorrect parameters: There is running task now.

administrator@cli> 

Fail: quota -a cancel -d 0 -t nasshare


Expect: user test_quota_6 is not in quota list

quota -t nasshare -d 0
===============================================================================
Name                    Limit           Used             AccountType           
===============================================================================
test_quota_0            2 GB            0 Byte           User                  
test_quota_1            3 GB            0 Byte           User                  
test_quota_6            1 GB            0 Byte           User                  

administrator@cli> 
'result': 'f'

Expect: quota of user for test_quota_0 should be deleted

quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0"
Error (0x4100104): Incorrect parameters: There is editing/running task now.

administrator@cli> 

Fail: quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0"

'result': 'f'

Expect: Invalid setting parameters

quota test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

quota -d test
Error (0x2013): Invalid setting parameters
-d: invalid setting test

administrator@cli> 

Expect: Invalid setting parameters

quota -d 100 -t test
Error (0x2013): Invalid setting parameters
-t: invalid setting test (nasshare)

administrator@cli> 

Expect: Invalid setting parameters

quota -a test
Error (0x2013): Invalid setting parameters
-a: invalid setting test (list|set|refresh)

administrator@cli> 

Expect: Invalid setting parameters

quota -a set -d 0 -t test -s "role=user,name=admin,limit=1GB"
Error (0x2013): Invalid setting parameters
-t: invalid setting test (nasshare)

administrator@cli> 

Expect: NAS Share id=[100] is not existed

quota -a set -d 100 -t nasshare -s "role=user,name=test_quota_0,limit=1GB"
Error (0x4100102): Empty query result, please check input parameters. NAS Share id=[100] is not existed.

administrator@cli> 

Expect: Invalid setting parameters

quota -a set -d 0 -t nasshare -s "role=test,name=test_quota_0,limit=1GB"
Error (0x2013): Invalid setting parameters
role: invalid setting test (user)

administrator@cli> 

Expect: NAS user [test] doesn't exist

quota -a set -d 0 -t nasshare -s "role=user,name=test,limit=1GB"
Error (0x4100104): Incorrect parameters: NAS user [test] doesn't exist.

administrator@cli> 

Expect: Invalid setting parameters

quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0,limit=test"
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: out of space

quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0,limit=100TB"

administrator@cli> 

Fail: quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0,limit=100TB"


Expect: Invalid setting parameters

quota -a refresh test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

quota -a refresh -t test
Error (0x2013): Invalid setting parameters
-t: invalid setting test (nasshare)

administrator@cli> 

Expect: Invalid setting parameters

quota -a set -d 0 -t nasshare -s ""
Error (0x2013): Invalid setting parameters
invalid comma: ','

administrator@cli> 

Expect: Can't do quota on user admin

quota -a set -d 0 -t nasshare -s "role=user,limit=1GB,name=admin"
Error (0x402): Invalid parameter
Can't do quota on user admin.

administrator@cli> 

Expect: Can't set quota to default group [users]

quota -a set -d 0 -t nasshare -s "role=group,name=users,limit=1GB"
Error (0x4100104): Incorrect parameters: Can't set quota to default group [users].

administrator@cli> 
'result': 'f'

Expect: Invalid option for the command or the action

quota -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -d 0 -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -test -s "role=user,name=test_quota_0,limit=1GB"
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -t nasshare -s "test=user,name=test_quota_0,limit=1GB"
Error (0x2012): Invalid option for the command or the action
-s: invalid option: test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -t nasshare -s "role=user,test=test_quota_0,limit=1GB"
Error (0x2012): Invalid option for the command or the action
-s: invalid option: test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0,test=1GB"
Error (0x2012): Invalid option for the command or the action
-s: invalid option: test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a refresh -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 
'result': 'p'

Expect: Missing parameter

quota -d
Error (0x403): Missing parameter
-d: missing value

administrator@cli> 

Expect: Missing parameter

quota -d 0 -t
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 

Expect: Missing parameter

quota -a
Error (0x403): Missing parameter
-a: missing value

administrator@cli> 

Expect: Missing parameter

quota -a set -d
Error (0x403): Missing parameter
-d: missing value

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 
Error (0x403): Missing parameter
missing parameter '-t' for '-a set'

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t 
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t nasshare 
Error (0x403): Missing parameter
missing parameter '-s' for '-a set'

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t nasshare -s
Error (0x403): Missing parameter
-s: missing value

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t clone
Error (0x403): Missing parameter
missing parameter '-s' for '-a set'

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t clone -s
Error (0x403): Missing parameter
-s: missing value

administrator@cli> 

Expect: Missing parameter

quota -a refresh
Error (0x403): Missing parameter
missing parameter '-t' for '-a refresh'

administrator@cli> 

Expect: Missing parameter

quota -a refresh -d
Error (0x403): Missing parameter
-d: missing value

administrator@cli> 

Expect: Missing parameter

quota -a refresh -d 0 -t
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 
'result': 'p'

Expect: specific nas user should have 1GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=1GB,name=test_quota_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 1 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 2GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=2GB,name=test_quota_0"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 2 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 3GB of storage limit in nasshare

quota -a set -d 0 -t nasshare -s "role=user,limit=3GB,name=test_quota_1"

administrator@cli> 
quota -v -d 0
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_1                      AccountType: User
Uid: 1002                               Limit: 3 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 998GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=998GB,name=test_quota_group_0"

administrator@cli> 
quota -v -d 1
-------------------------------------------------------------------------------
Name: test_quota_group_0                AccountType: Group
Gid: 1001                               Limit: 998 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 999GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=999GB,name=test_quota_group_0"

administrator@cli> 
quota -v -d 1
-------------------------------------------------------------------------------
Name: test_quota_group_0                AccountType: Group
Gid: 1001                               Limit: 999 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: specific nas user should have 1000GB of storage limit in nasshare

quota -a set -d 1 -t nasshare -s "role=group,limit=1000GB,name=test_quota_group_1"

administrator@cli> 
quota -v -d 1
-------------------------------------------------------------------------------
Name: test_quota_group_0                AccountType: Group
Gid: 1001                               Limit: 999 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_group_1                AccountType: Group
Gid: 1002                               Limit: 1 TB
Used: 0 Byte                            Status: Ready

administrator@cli> 
'result': 'p'

Expect: list all of quota on nasshare 0

quota
===============================================================================
Name                    Limit           Used             AccountType           
===============================================================================
test_quota_0            2 GB            0 Byte           User                  
test_quota_1            3 GB            0 Byte           User                  

administrator@cli> 

Expect: list all of quota on nasshare 0

quota -d 0 -t nasshare
===============================================================================
Name                    Limit           Used             AccountType           
===============================================================================
test_quota_0            2 GB            0 Byte           User                  
test_quota_1            3 GB            0 Byte           User                  

administrator@cli> 

Expect: list all of quota on nasshare 1

quota -d 1
===============================================================================
Name                        Limit           Used           AccountType         
===============================================================================
test_quota_group_0          999 GB          0 Byte         Group               
test_quota_group_1          1 TB            0 Byte         Group               

administrator@cli> 
'result': 'p'

Expect: list all of quota by verbose mode

quota -v
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_1                      AccountType: User
Uid: 1002                               Limit: 3 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 

Expect: list quota of nasshare type by verbose mode

quota -v -d 0 -t nasshare
-------------------------------------------------------------------------------
Name: test_quota_0                      AccountType: User
Uid: 1001                               Limit: 2 GB
Used: 0 Byte                            Status: Ready
-------------------------------------------------------------------------------
Name: test_quota_1                      AccountType: User
Uid: 1002                               Limit: 3 GB
Used: 0 Byte                            Status: Ready

administrator@cli> 
'result': 'p'

Expect: refresh quota of nasshare type

quota -a refresh -d 0 -t nasshare

administrator@cli> 
'result': 'p'

Expect: precondition: add quota

quota -a set -d 0 -t nasshare -s "role=user,limit=1GB,name=test_quota_6"

administrator@cli> 

Expect: to add quota should be canceled

quota -a cancel -d 0 -t nasshare
Error (0x4100104): Incorrect parameters: There is running task now.

administrator@cli> 

Fail: quota -a cancel -d 0 -t nasshare


Expect: user test_quota_6 is not in quota list

quota -t nasshare -d 0
===============================================================================
Name                    Limit           Used             AccountType           
===============================================================================
test_quota_0            2 GB            0 Byte           User                  
test_quota_1            3 GB            0 Byte           User                  
test_quota_6            1 GB            0 Byte           User                  

administrator@cli> 
'result': 'f'

Expect: quota of user for test_quota_0 should be deleted

quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0"
Error (0x4100104): Incorrect parameters: There is editing/running task now.

administrator@cli> 

Fail: quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0"

'result': 'f'

Expect: Invalid setting parameters

quota test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

quota -d test
Error (0x2013): Invalid setting parameters
-d: invalid setting test

administrator@cli> 

Expect: Invalid setting parameters

quota -d 100 -t test
Error (0x2013): Invalid setting parameters
-t: invalid setting test (nasshare)

administrator@cli> 

Expect: Invalid setting parameters

quota -a test
Error (0x2013): Invalid setting parameters
-a: invalid setting test (list|set|refresh)

administrator@cli> 

Expect: Invalid setting parameters

quota -a set -d 0 -t test -s "role=user,name=admin,limit=1GB"
Error (0x2013): Invalid setting parameters
-t: invalid setting test (nasshare)

administrator@cli> 

Expect: NAS Share id=[100] is not existed

quota -a set -d 100 -t nasshare -s "role=user,name=test_quota_0,limit=1GB"
Error (0x4100102): Empty query result, please check input parameters. NAS Share id=[100] is not existed.

administrator@cli> 

Expect: Invalid setting parameters

quota -a set -d 0 -t nasshare -s "role=test,name=test_quota_0,limit=1GB"
Error (0x2013): Invalid setting parameters
role: invalid setting test (user)

administrator@cli> 

Expect: NAS user [test] doesn't exist

quota -a set -d 0 -t nasshare -s "role=user,name=test,limit=1GB"
Error (0x4100104): Incorrect parameters: NAS user [test] doesn't exist.

administrator@cli> 

Expect: Invalid setting parameters

quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0,limit=test"
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: out of space

quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0,limit=100TB"

administrator@cli> 

Fail: quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0,limit=100TB"


Expect: Invalid setting parameters

quota -a refresh test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

quota -a refresh -t test
Error (0x2013): Invalid setting parameters
-t: invalid setting test (nasshare)

administrator@cli> 

Expect: Invalid setting parameters

quota -a set -d 0 -t nasshare -s ""
Error (0x2013): Invalid setting parameters
invalid comma: ','

administrator@cli> 

Expect: Can't do quota on user admin

quota -a set -d 0 -t nasshare -s "role=user,limit=1GB,name=admin"
Error (0x402): Invalid parameter
Can't do quota on user admin.

administrator@cli> 

Expect: Can't set quota to default group [users]

quota -a set -d 0 -t nasshare -s "role=group,name=users,limit=1GB"
Error (0x4100104): Incorrect parameters: Can't set quota to default group [users].

administrator@cli> 
'result': 'f'

Expect: Invalid option for the command or the action

quota -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -d 0 -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -test -s "role=user,name=test_quota_0,limit=1GB"
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -t nasshare -s "test=user,name=test_quota_0,limit=1GB"
Error (0x2012): Invalid option for the command or the action
-s: invalid option: test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -t nasshare -s "role=user,test=test_quota_0,limit=1GB"
Error (0x2012): Invalid option for the command or the action
-s: invalid option: test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a set -d 0 -t nasshare -s "role=user,name=test_quota_0,test=1GB"
Error (0x2012): Invalid option for the command or the action
-s: invalid option: test

administrator@cli> 

Expect: Invalid option for the command or the action

quota -a refresh -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 
'result': 'p'

Expect: Missing parameter

quota -d
Error (0x403): Missing parameter
-d: missing value

administrator@cli> 

Expect: Missing parameter

quota -d 0 -t
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 

Expect: Missing parameter

quota -a
Error (0x403): Missing parameter
-a: missing value

administrator@cli> 

Expect: Missing parameter

quota -a set -d
Error (0x403): Missing parameter
-d: missing value

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 
Error (0x403): Missing parameter
missing parameter '-t' for '-a set'

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t 
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t nasshare 
Error (0x403): Missing parameter
missing parameter '-s' for '-a set'

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t nasshare -s
Error (0x403): Missing parameter
-s: missing value

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t clone
Error (0x403): Missing parameter
missing parameter '-s' for '-a set'

administrator@cli> 

Expect: Missing parameter

quota -a set -d 0 -t clone -s
Error (0x403): Missing parameter
-s: missing value

administrator@cli> 

Expect: Missing parameter

quota -a refresh
Error (0x403): Missing parameter
missing parameter '-t' for '-a refresh'

administrator@cli> 

Expect: Missing parameter

quota -a refresh -d
Error (0x403): Missing parameter
-d: missing value

administrator@cli> 

Expect: Missing parameter

quota -a refresh -d 0 -t
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 
'result': 'p'

Expect: permisions of everyone should be 0 on nasshare

acl -a set -d 0 -t nasshare -s "role=everyone,acl=ro"

administrator@cli> 
acl -t nasshare -d 0
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     ro         
ownergroup        N/A       N/A                                     rw         

administrator@cli> 

Expect: permisions of everyone should be rw on nasshare

acl -a set -d 0 -t nasshare -s "role=everyone,acl=rw"

administrator@cli> 
acl -t nasshare -d 0
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     rw         
ownergroup        N/A       N/A                                     rw         

administrator@cli> 

Expect: permisions of everyone should be deny only on nasshare

acl -a set -d 0 -t nasshare -s "role=everyone,acl=deny"

administrator@cli> 
acl -t nasshare -d 0
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     deny       
ownergroup        N/A       N/A                                     rw         

administrator@cli> 

Expect: signle nas user should can set ro permissions on nasshare

acl -a set -d 0 -t nasshare -s "role=user,acl=ro,name=test_acl_0"

administrator@cli> 
acl -t nasshare -d 0
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     deny       
user              1001      test_acl_0                              ro         
ownergroup        N/A       N/A                                     rw         

administrator@cli> 

Expect: signle nas user should can set rw permissions on nasshare

acl -a set -d 0 -t nasshare -s "role=user,acl=rw,name=test_acl_1"

administrator@cli> 
acl -t nasshare -d 0
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     deny       
user              1001      test_acl_0                              ro         
user              1002      test_acl_1                              rw         
ownergroup        N/A       N/A                                     rw         

administrator@cli> 

Expect: signle nas user should can set deny permissions on nasshare

acl -a set -d 0 -t nasshare -s "role=user,acl=deny,name=test_acl_2"

administrator@cli> 
acl -t nasshare -d 0
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     deny       
user              1001      test_acl_0                              ro         
user              1002      test_acl_1                              rw         
user              1003      test_acl_2                              deny       
ownergroup        N/A       N/A                                     rw         

administrator@cli> 

Expect: signle nas group should can set ro permissions on nasshare

acl -a set -d 1 -t nasshare -s "role=group,acl=ro,name=test_acl_group_0"

administrator@cli> 
acl -t nasshare -d 1
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     rw         
group             1001      test_acl_group_0                        ro         
ownergroup        N/A       N/A                                     rw         

administrator@cli> 

Expect: signle nas group should can set rw permissions on nasshare

acl -a set -d 1 -t nasshare -s "role=group,acl=rw,name=test_acl_group_1"

administrator@cli> 
acl -t nasshare -d 1
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     rw         
group             1001      test_acl_group_0                        ro         
group             1002      test_acl_group_1                        rw         
ownergroup        N/A       N/A                                     rw         

administrator@cli> 

Expect: signle nas group should can set deny permissions on nasshare

acl -a set -d 1 -t nasshare -s "role=group,acl=deny,name=test_acl_group_2"

administrator@cli> 
acl -t nasshare -d 1
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     rw         
group             1001      test_acl_group_0                        ro         
group             1002      test_acl_group_1                        rw         
group             1003      test_acl_group_2                        deny       
ownergroup        N/A       N/A                                     rw         

administrator@cli> 
'result': 'p'

Expect: list acl settings on nasshare 0

acl -t nasshare -d 0
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     deny       
user              1001      test_acl_0                              ro         
user              1002      test_acl_1                              rw         
user              1003      test_acl_2                              deny       
ownergroup        N/A       N/A                                     rw         

administrator@cli> 

Expect: list acl settings on nasshare 1

acl -t nasshare -d 1
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     rw         
group             1001      test_acl_group_0                        ro         
group             1002      test_acl_group_1                        rw         
group             1003      test_acl_group_2                        deny       
ownergroup        N/A       N/A                                     rw         

administrator@cli> 
'result': 'p'

Expect: list acl settings of specific nasshare type by verbose mode

acl -v -t nasshare -d 0
-------------------------------------------------------------------------------
Role: everyone                          UIDorGID: N/A
ACL: deny                               Status: Ready
UsernameOrGroupname: N/A
-------------------------------------------------------------------------------
Role: user                              UIDorGID: 1001
ACL: ro                                 Status: Ready
UsernameOrGroupname: test_acl_0
-------------------------------------------------------------------------------
Role: user                              UIDorGID: 1002
ACL: rw                                 Status: Ready
UsernameOrGroupname: test_acl_1
-------------------------------------------------------------------------------
Role: user                              UIDorGID: 1003
ACL: deny                               Status: Ready
UsernameOrGroupname: test_acl_2
-------------------------------------------------------------------------------
Role: ownergroup                        UIDorGID: N/A
ACL: rw                                 Status: Ready
UsernameOrGroupname: N/A

administrator@cli> 
'result': 'p'

Expect: refresh acl of nasshare type

acl -a refresh -d 0 -t nasshare

administrator@cli> 
'result': 'p'

Expect: signle nas user should can set unset permissions on nasshare

acl -a set -d 0 -t nasshare -s "role=user,acl=unset,name=test_acl_2"

administrator@cli> 
acl -t nasshare -d 0
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     deny       
user              1001      test_acl_0                              ro         
user              1002      test_acl_1                              rw         
ownergroup        N/A       N/A                                     rw         

administrator@cli> 

Expect: signle nas group should can set unset permissions on nasshare

acl -a set -d 1 -t nasshare -s "role=group,acl=unset,name=test_acl_group_2"

administrator@cli> 
acl -t nasshare -d 1
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     rw         
group             1001      test_acl_group_0                        ro         
group             1002      test_acl_group_1                        rw         
ownergroup        N/A       N/A                                     rw         

administrator@cli> 

Expect: permisions of everyone should be unset only on nasshare

acl -a set -d 0 -t nasshare -s "role=everyone,acl=unset"

administrator@cli> 
acl -t nasshare -d 0
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     deny       
user              1001      test_acl_0                              ro         
user              1002      test_acl_1                              rw         
ownergroup        N/A       N/A                                     rw         

administrator@cli> 
'result': 'p'

Expect: all acl settings are cleared on specific nasshare

acl -a clear -t nasshare -d 0

administrator@cli> 
acl -t nasshare -d 0
===============================================================================
Role              UIDorGID  Name                                    ACL       
===============================================================================
everyone          N/A       N/A                                     rw         
ownergroup        N/A       N/A                                     rw         

administrator@cli> 
'result': 'p'

Expect: add nasshare acl is deny for everyone

acl -a set -d 0 -t nasshare -s "role=everyone,acl=deny"

administrator@cli> 

Expect: to add action is canceled on nasshare

acl -a cancel -t nasshare -d 0
Error (0x4100104): Incorrect parameters: There is running task now.

administrator@cli> 

Fail: acl -a cancel -t nasshare -d 0

'result': 'f'

Expect: Invalid setting parameters

acl test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

acl -d test
Error (0x2013): Invalid setting parameters
-d: invalid setting test

administrator@cli> 

Expect: Invalid setting parameters

acl -d 0 -t test
Error (0x2013): Invalid setting parameters
-t: invalid setting test (nasshare)

administrator@cli> 

Expect: Invalid setting parameters

acl -a test
Error (0x2013): Invalid setting parameters
-a: invalid setting test (list|clear|set|cancel|refresh)

administrator@cli> 

Expect: id=[100] is not existed

acl -a set -d 100 -t nasshare -s "role=user,name=admin,acl=rw"
Error (0x4100102): Empty query result, please check input parameters. NAS Share id=[100] is not existed.

administrator@cli> 

Expect: id=[100] is not existed

acl -a set -d 100 -t nasshare -s "role=group,name=users,acl=rw"
Error (0x4100102): Empty query result, please check input parameters. NAS Share id=[100] is not existed.

administrator@cli> 

Expect: Invalid setting parameters

acl -a set -d 0 -t test -s "role=user,name=admin,acl=rw"
Error (0x2013): Invalid setting parameters
-t: invalid setting test (nasshare)

administrator@cli> 

Expect: Invalid setting parameters

acl -a set -d 0 -t nasshare -s "role=test,name=admin,acl=rw"
Error (0x2013): Invalid setting parameters
role: invalid setting test (everyone|user|group|ownergroup)

administrator@cli> 

Expect: NAS user [test] doesn't exist

acl -a set -d 0 -t nasshare -s "role=user,name=test,acl=rw"
Error (0x4100104): Incorrect parameters: NAS user [test] doesn't exist.

administrator@cli> 

Expect: NAS group [test] doesn't exist

acl -a set -d 0 -t nasshare -s "role=group,name=test,acl=rw"
Error (0x4100104): Incorrect parameters: NAS group [test] doesn't exist.

administrator@cli> 

Expect: Invalid setting parameters

acl -a set -d 0 -t nasshare -s "role=user,name=test_acl_0,acl=test"
Error (0x2013): Invalid setting parameters
acl: invalid setting test (unset|deny|ro|rw)

administrator@cli> 

Expect: Invalid setting parameters

acl -a set -d 0 -t nasshare -s "role=group,name=users,acl=test"
Error (0x2013): Invalid setting parameters
acl: invalid setting test (unset|deny|ro|rw)

administrator@cli> 

Expect: Invalid setting parameters

acl -a refresh test
Error (0x2013): Invalid setting parameters
invalid setting: test

administrator@cli> 

Expect: Invalid setting parameters

acl -a refresh -t test
Error (0x2013): Invalid setting parameters
-t: invalid setting test (nasshare)

administrator@cli> 

Expect: Invalid setting parameters

acl -a mod -d 0 -t nasshare -s ""
Error (0x2013): Invalid setting parameters
-a: invalid setting mod (list|clear|set|cancel|refresh)

administrator@cli> 

Expect: Invalid setting parameters

acl -a mod -d 0 -t clone -s ""
Error (0x2013): Invalid setting parameters
-a: invalid setting mod (list|clear|set|cancel|refresh)

administrator@cli> 

Expect: Invalid setting parameters

acl -a clear -d test
Error (0x2013): Invalid setting parameters
-d: invalid setting test

administrator@cli> 

Expect: Invalid setting parameters

acl -a cancel -d test
Error (0x2013): Invalid setting parameters
-d: invalid setting test

administrator@cli> 
'result': 'p'

Expect: Invalid option for the command or the action

acl -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

acl -d 0 -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

acl -a set -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

acl -a set -d 0 -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

acl -a set -d 0 -nasshare -s "test=user,user=adimin,acl=rw"
Error (0x2012): Invalid option for the command or the action
invalid option: -nasshare

administrator@cli> 

Expect: Invalid option for the command or the action

acl -a set -d 0 -nasshare -s "role=user,test=adimin,acl=rw"
Error (0x2012): Invalid option for the command or the action
invalid option: -nasshare

administrator@cli> 

Expect: Invalid option for the command or the action

acl -a refresh -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

acl -a clear -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

acl -a clear -t nasshare -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 

Expect: Invalid option for the command or the action

acl -a cancel -test
Error (0x2012): Invalid option for the command or the action
invalid option: -test

administrator@cli> 
'result': 'p'

Expect: Missing parameter

acl -d
Error (0x403): Missing parameter
-d: missing value

administrator@cli> 

Expect: Missing parameter

acl -d 0 -t
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 

Expect: Missing parameter

acl -a
Error (0x403): Missing parameter
-a: missing value

administrator@cli> 

Expect: Missing parameter

acl -a set -d
Error (0x403): Missing parameter
-d: missing value

administrator@cli> 

Expect: Missing parameter

acl -a set -d 0 
Error (0x403): Missing parameter
missing parameter '-s' for '-a set'

administrator@cli> 

Expect: Missing parameter

acl -a set -d 0 -t 
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 

Expect: Missing parameter

acl -a set -d 0 -t nasshare 
Error (0x403): Missing parameter
missing parameter '-s' for '-a set'

administrator@cli> 

Expect: Missing parameter

acl -a set -d 0 -t nasshare -s
Error (0x403): Missing parameter
-s: missing value

administrator@cli> 

Expect: Missing parameter

acl -a refresh
Error (0x403): Missing parameter
missing parameter '-d' for '-a refresh'

administrator@cli> 

Expect: Missing parameter

acl -a refresh -d
Error (0x403): Missing parameter
-d: missing value

administrator@cli> 

Expect: Missing parameter

acl -a refresh -d 0 -t
Error (0x403): Missing parameter
-t: missing value

administrator@cli> 

Expect: Missing parameter

acl -a cancel
Error (0x403): Missing parameter
missing parameter '-d' for '-a cancel'

administrator@cli> 

Expect: Missing parameter

acl -a cancel -d
Error (0x403): Missing parameter
-d: missing value

administrator@cli> 

Expect: Missing parameter

acl -a clear -d
Error (0x403): Missing parameter
-d: missing value

administrator@cli> 

Expect: Missing parameter

acl -a clear
Error (0x403): Missing parameter
missing parameter '-d' for '-a clear'

administrator@cli> 
'result': 'p'
bgasched
No BGA Schedule detected

administrator@cli> 
There is no bgasched
pool
No pool in the subsystem

administrator@cli> 
phydrv
===============================================================================
PdId Model       Type     CfgCapacity Location      OpStatus   ConfigStatus    
===============================================================================
1    HUS723020AL SAS HDD  2 TB        Encl1 Slot1   OK         Unconfigured    
     S640                                                                      
2    HDS722020AL SAS HDD  2 TB        Encl1 Slot2   OK         Unconfigured    
     A330                                                                      
3    ST373455SS  SAS HDD  73 GB       Encl1 Slot3   OK         Unconfigured    
4    HUS724040AL SAS HDD  4 TB        Encl1 Slot4   OK         Unconfigured    
     S640                                                                      
5    INTEL       SAS SSD  31 GB       Encl1 Slot5   OK         Unconfigured    
6    SSD U110    SAS SSD  31 GB       Encl1 Slot6   OK         Unconfigured    
     32GB                                                                      
8    HUS724040AL SAS HDD  4 TB        Encl1 Slot8   OK         Unconfigured    
     S640                                                                      
9    HUS724040AL SAS HDD  4 TB        Encl1 Slot9   OK         Unconfigured    
     S640                                                                      
10   HUA723020AL SAS HDD  2 TB        Encl1 Slot10  OK         Unconfigured    
     A640                                                                      
11   HDS722020AL SAS HDD  2 TB        Encl1 Slot11  OK         Unconfigured    
     A330                                                                      
12   HUS724040AL SAS HDD  4 TB        Encl1 Slot12  OK         Unconfigured    
     S640                                                                      
13   ST3146356SS SAS HDD  146 GB      Encl1 Slot13  OK         Unconfigured    
14   HUS723020AL SAS HDD  2 TB        Encl1 Slot14  OK         Unconfigured    
     S640                                                                      
15   ST380815AS  SAS HDD  79 GB       Encl1 Slot15  OK         Unconfigured    
16   SSDSA2SH032 SAS SSD  31 GB       Encl1 Slot16  OK         Unconfigured    
     G1GN                                                                      

administrator@cli> 
pool -a add -s "name=testBgasched1, raid=1" -p 1,2

administrator@cli> 
pool -a add -s "name=testBgasched2, raid=1" -p 3,4

administrator@cli> 
pool -a add -s "name=testBgasched3, raid=0" -p 5

administrator@cli> 
pool
===============================================================================
Id   Name                        TotalCap  UsedCap   AvailCap  OpStatus       
===============================================================================
0    testBgasched1               1.93 TB   42.95 GB  1.79 TB   OK,             
                                                               Synchronizing   
1    testBgasched2               70.21 GB  17.18 GB  49.52 GB  OK,             
                                                               Synchronizing   
2    testBgasched3               29.91 GB  17.18 GB  11.23 GB  OK              

administrator@cli> 
date
-------------------------------------------------------------------------------
SystemDate: 2017-12-15 15:56:52

administrator@cli> 
add bgasched of daily type
bgasched -a add -t rc -s "recurtype=daily,poolid=0"

administrator@cli> 
bgasched -a add -t rc -s "recurtype=daily,poolid=1"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Daily
EndOn: No End Date                      RecurrenceInterval: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0
-------------------------------------------------------------------------------
Id: 2                                   Type: RedundancyCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Daily
EndOn: No End Date                      RecurrenceInterval: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 1

administrator@cli> 
bgasched -a add -t br -s "recurtype=daily"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 02:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Daily
EndOn: No End Date                      RecurrenceInterval: 1

administrator@cli> 
bgasched -a add -t sc -s "recurtype=daily"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Daily
EndOn: No End Date                      RecurrenceInterval: 1

administrator@cli> 
bgasched
===============================================================================
Type                ID   Recurrence  StartTime           OperationalStatus 
===============================================================================
BatteryRecondition  1    Daily       2017-12-15 02:00    Disabled              
SpareCheck          1    Daily       2017-12-15 22:00    Disabled              
RedundancyCheck     1    Daily       2017-12-15 22:00    Disabled              
RedundancyCheck     2    Daily       2017-12-15 22:00    Disabled              

administrator@cli> 
bgasched -a del -t br -i 1

administrator@cli> 
bgasched -a del -t sc -i 1

administrator@cli> 
bgasched -a del -t rc -i 1

administrator@cli> 
bgasched -a del -t rc -i 2

administrator@cli> 
bgasched -a add -t rc -s "recurtype=daily,poolid=2"
Error (0x2013): Invalid setting parameters
specified pool id:2 is RAID0

administrator@cli> 
bgasched
No BGA Schedule detected

administrator@cli> 
There is no bgasched
add bgasched of weekly type
bgasched -a add -t rc -s "poolid=0"

administrator@cli> 
bgasched -a add -t rc -s "poolid=1"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Weekly
EndOn: No End Date                      RecurrenceInterval: 1
DayOfWeek: Wed                          AutoFix: Disabled
PauseOnError: Disabled                  PoolIds: 0
-------------------------------------------------------------------------------
Id: 2                                   Type: RedundancyCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Weekly
EndOn: No End Date                      RecurrenceInterval: 1
DayOfWeek: Wed                          AutoFix: Disabled
PauseOnError: Disabled                  PoolIds: 1

administrator@cli> 
bgasched -a add -t br

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 02:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Monthly
EndOn: No End Date                      MonthMask:  Jan,Mar,May,Jul,Sep,Nov
DayOfMonth: 1

administrator@cli> 
bgasched -a add -t sc

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Weekly
EndOn: No End Date                      RecurrenceInterval: 1
DayOfWeek: Tues

administrator@cli> 
bgasched
===============================================================================
Type                ID   Recurrence  StartTime           OperationalStatus 
===============================================================================
BatteryRecondition  1    Monthly     2017-12-15 02:00    Disabled              
SpareCheck          1    Weekly      2017-12-15 22:00    Disabled              
RedundancyCheck     1    Weekly      2017-12-15 22:00    Disabled              
RedundancyCheck     2    Weekly      2017-12-15 22:00    Disabled              

administrator@cli> 
bgasched -a del -t br -i 1

administrator@cli> 
bgasched -a del -t sc -i 1

administrator@cli> 
bgasched -a del -t rc -i 1

administrator@cli> 
bgasched -a del -t rc -i 2

administrator@cli> 
add bgasched of monthly type
bgasched -a add -t rc -s "recurtype=monthly,poolid=0"

administrator@cli> 
bgasched -a add -t rc -s "recurtype=monthly,poolid=1"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: No End Date                      DayOfMonth: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0
-------------------------------------------------------------------------------
Id: 2                                   Type: RedundancyCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: No End Date                      DayOfMonth: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 1

administrator@cli> 
bgasched -a add -t br -s "recurtype=monthly"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 02:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Monthly
EndOn: No End Date                      MonthMask:  Jan,Mar,May,Jul,Sep,Nov
DayOfMonth: 1

administrator@cli> 
bgasched -a add -t sc -s "recurtype=monthly"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: No End Date                      DayOfMonth: 1

administrator@cli> 
bgasched
===============================================================================
Type                ID   Recurrence  StartTime           OperationalStatus 
===============================================================================
BatteryRecondition  1    Monthly     2017-12-15 02:00    Disabled              
SpareCheck          1    Monthly     2017-12-15 22:00    Disabled              
RedundancyCheck     1    Monthly     2017-12-15 22:00    Disabled              
RedundancyCheck     2    Monthly     2017-12-15 22:00    Disabled              

administrator@cli> 
bgasched -a del -t br -i 1

administrator@cli> 
bgasched -a del -t sc -i 1

administrator@cli> 
bgasched -a del -t rc -i 1

administrator@cli> 
bgasched -a del -t rc -i 2

administrator@cli> 

<font color="green">Pass</font>
'result': 'p'
pool
===============================================================================
Id   Name                        TotalCap  UsedCap   AvailCap  OpStatus       
===============================================================================
0    testBgasched1               1.93 TB   42.95 GB  1.79 TB   OK,             
                                                               Synchronizing   
1    testBgasched2               70.21 GB  17.18 GB  49.52 GB  OK,             
                                                               Synchronizing   
2    testBgasched3               29.91 GB  17.18 GB  11.23 GB  OK              

administrator@cli> 
pool -a del -f -i 0
Do you want to delete the pool? (y|n):Do you want to delete the pool? (y|n):

administrator@cli> 
pool -a del -f -i 1
Do you want to delete the pool? (y|n):Do you want to delete the pool? (y|n):

administrator@cli> 
pool -a del -f -i 2
Do you want to delete the pool? (y|n):Do you want to delete the pool? (y|n):

administrator@cli> 
bgasched
No BGA Schedule detected

administrator@cli> 
There is no bgasched
pool
No pool in the subsystem

administrator@cli> 
phydrv
===============================================================================
PdId Model       Type     CfgCapacity Location      OpStatus   ConfigStatus    
===============================================================================
1    HUS723020AL SAS HDD  2 TB        Encl1 Slot1   OK         Unconfigured    
     S640                                                                      
2    HDS722020AL SAS HDD  2 TB        Encl1 Slot2   OK         Unconfigured    
     A330                                                                      
3    ST373455SS  SAS HDD  73 GB       Encl1 Slot3   OK         Unconfigured    
4    HUS724040AL SAS HDD  4 TB        Encl1 Slot4   OK         Unconfigured    
     S640                                                                      
5    INTEL       SAS SSD  31 GB       Encl1 Slot5   OK         Unconfigured    
6    SSD U110    SAS SSD  31 GB       Encl1 Slot6   OK         Unconfigured    
     32GB                                                                      
8    HUS724040AL SAS HDD  4 TB        Encl1 Slot8   OK         Unconfigured    
     S640                                                                      
9    HUS724040AL SAS HDD  4 TB        Encl1 Slot9   OK         Unconfigured    
     S640                                                                      
10   HUA723020AL SAS HDD  2 TB        Encl1 Slot10  OK         Unconfigured    
     A640                                                                      
11   HDS722020AL SAS HDD  2 TB        Encl1 Slot11  OK         Unconfigured    
     A330                                                                      
12   HUS724040AL SAS HDD  4 TB        Encl1 Slot12  OK         Unconfigured    
     S640                                                                      
13   ST3146356SS SAS HDD  146 GB      Encl1 Slot13  OK         Unconfigured    
14   HUS723020AL SAS HDD  2 TB        Encl1 Slot14  OK         Unconfigured    
     S640                                                                      
15   ST380815AS  SAS HDD  79 GB       Encl1 Slot15  OK         Unconfigured    
16   SSDSA2SH032 SAS SSD  31 GB       Encl1 Slot16  OK         Unconfigured    
     G1GN                                                                      

administrator@cli> 
pool -a add -s "name=testBgasched1, raid=1" -p 1,2

administrator@cli> 
pool -a add -s "name=testBgasched2, raid=1" -p 3,4

administrator@cli> 
pool -a add -s "name=testBgasched3, raid=0" -p 5

administrator@cli> 
pool
===============================================================================
Id   Name                        TotalCap  UsedCap   AvailCap  OpStatus       
===============================================================================
0    testBgasched1               1.93 TB   42.95 GB  1.79 TB   OK,             
                                                               Synchronizing   
1    testBgasched2               70.21 GB  17.18 GB  49.52 GB  OK,             
                                                               Synchronizing   
2    testBgasched3               29.91 GB  17.18 GB  11.23 GB  OK              

administrator@cli> 
date
-------------------------------------------------------------------------------
SystemDate: 2017-12-15 16:00:04

administrator@cli> 
add bgasched of daily type
bgasched -a add -t rc -s "recurtype=daily,poolid=0"

administrator@cli> 
bgasched -a add -t rc -s "recurtype=daily,poolid=1"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Daily
EndOn: No End Date                      RecurrenceInterval: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0
-------------------------------------------------------------------------------
Id: 2                                   Type: RedundancyCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Daily
EndOn: No End Date                      RecurrenceInterval: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 1

administrator@cli> 
bgasched -a add -t br -s "recurtype=daily"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 02:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Daily
EndOn: No End Date                      RecurrenceInterval: 1

administrator@cli> 
bgasched -a add -t sc -s "recurtype=daily"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Daily
EndOn: No End Date                      RecurrenceInterval: 1

administrator@cli> 
bgasched
===============================================================================
Type                ID   Recurrence  StartTime           OperationalStatus 
===============================================================================
BatteryRecondition  1    Daily       2017-12-15 02:00    Disabled              
SpareCheck          1    Daily       2017-12-15 22:00    Disabled              
RedundancyCheck     1    Daily       2017-12-15 22:00    Disabled              
RedundancyCheck     2    Daily       2017-12-15 22:00    Disabled              

administrator@cli> 
bgasched -a del -t br -i 1

administrator@cli> 
bgasched -a del -t sc -i 1

administrator@cli> 
bgasched -a del -t rc -i 1

administrator@cli> 
bgasched -a del -t rc -i 2

administrator@cli> 
bgasched -a add -t rc -s "recurtype=daily,poolid=2"
Error (0x2013): Invalid setting parameters
specified pool id:2 is RAID0

administrator@cli> 
bgasched
No BGA Schedule detected

administrator@cli> 
There is no bgasched
add bgasched of weekly type
bgasched -a add -t rc -s "poolid=0"

administrator@cli> 
bgasched -a add -t rc -s "poolid=1"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Weekly
EndOn: No End Date                      RecurrenceInterval: 1
DayOfWeek: Wed                          AutoFix: Disabled
PauseOnError: Disabled                  PoolIds: 0
-------------------------------------------------------------------------------
Id: 2                                   Type: RedundancyCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Weekly
EndOn: No End Date                      RecurrenceInterval: 1
DayOfWeek: Wed                          AutoFix: Disabled
PauseOnError: Disabled                  PoolIds: 1

administrator@cli> 
bgasched -a add -t br

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 02:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Monthly
EndOn: No End Date                      MonthMask:  Jan,Mar,May,Jul,Sep,Nov
DayOfMonth: 1

administrator@cli> 
bgasched -a add -t sc

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Weekly
EndOn: No End Date                      RecurrenceInterval: 1
DayOfWeek: Tues

administrator@cli> 
bgasched
===============================================================================
Type                ID   Recurrence  StartTime           OperationalStatus 
===============================================================================
BatteryRecondition  1    Monthly     2017-12-15 02:00    Disabled              
SpareCheck          1    Weekly      2017-12-15 22:00    Disabled              
RedundancyCheck     1    Weekly      2017-12-15 22:00    Disabled              
RedundancyCheck     2    Weekly      2017-12-15 22:00    Disabled              

administrator@cli> 
bgasched -a del -t br -i 1

administrator@cli> 
bgasched -a del -t sc -i 1

administrator@cli> 
bgasched -a del -t rc -i 1

administrator@cli> 
bgasched -a del -t rc -i 2

administrator@cli> 
add bgasched of monthly type
bgasched -a add -t rc -s "recurtype=monthly,poolid=0"

administrator@cli> 
bgasched -a add -t rc -s "recurtype=monthly,poolid=1"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: No End Date                      DayOfMonth: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0
-------------------------------------------------------------------------------
Id: 2                                   Type: RedundancyCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: No End Date                      DayOfMonth: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 1

administrator@cli> 
bgasched -a add -t br -s "recurtype=monthly"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 02:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Monthly
EndOn: No End Date                      MonthMask:  Jan,Mar,May,Jul,Sep,Nov
DayOfMonth: 1

administrator@cli> 
bgasched -a add -t sc -s "recurtype=monthly"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: No End Date                      DayOfMonth: 1

administrator@cli> 
bgasched
===============================================================================
Type                ID   Recurrence  StartTime           OperationalStatus 
===============================================================================
BatteryRecondition  1    Monthly     2017-12-15 02:00    Disabled              
SpareCheck          1    Monthly     2017-12-15 22:00    Disabled              
RedundancyCheck     1    Monthly     2017-12-15 22:00    Disabled              
RedundancyCheck     2    Monthly     2017-12-15 22:00    Disabled              

administrator@cli> 
bgasched -a del -t br -i 1

administrator@cli> 
bgasched -a del -t sc -i 1

administrator@cli> 
bgasched -a del -t rc -i 1

administrator@cli> 
bgasched -a del -t rc -i 2

administrator@cli> 

<font color="green">Pass</font>
'result': 'p'
bgasched -a add -t rc -s "recurtype=daily"

administrator@cli> 
bgasched -a add -t br -s "recurtype=weekly"

administrator@cli> 
bgasched -a add -t sc -s "recurtype=monthly"

administrator@cli> 
verify: bgasched -a mod -t rc
bgasched -a mod -t rc -s "autofix=Enable,pause=Enable"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 22:00                        StartDay: 2017-12-15
OperationalStatus: Disabled             RecurrenceType: Daily
EndOn: No End Date                      RecurrenceInterval: 1
AutoFix: Enabled                        PauseOnError: Enabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t rc -s "status=Disable,starttime=00:00,startfrom=1970-01-01,endon=1"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 00:00                        StartDay: 1970-01-01
OperationalStatus: Disabled             RecurrenceType: Daily
EndOn: after 1 times                    RecurrenceInterval: 1
AutoFix: Enabled                        PauseOnError: Enabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t rc -s "autofix=Enable,pause=Enable"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 00:00                        StartDay: 1970-01-01
OperationalStatus: Disabled             RecurrenceType: Daily
EndOn: after 1 times                    RecurrenceInterval: 1
AutoFix: Enabled                        PauseOnError: Enabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t rc -s "status=Disable,starttime=06:10,startfrom=2037-12-31,endon=255"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 06:10                        StartDay: 2037-12-31
OperationalStatus: Disabled             RecurrenceType: Daily
EndOn: after 255 times                  RecurrenceInterval: 1
AutoFix: Enabled                        PauseOnError: Enabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t rc -s "autofix=Disable,pause=Disable"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 06:10                        StartDay: 2037-12-31
OperationalStatus: Disabled             RecurrenceType: Daily
EndOn: after 255 times                  RecurrenceInterval: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t rc -s "status=Enable,starttime=12:20,startfrom=2000-01-01,endon=1970-01-01"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 12:20                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 1970/01/01                       RecurrenceInterval: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t rc -s "autofix=Disable,pause=Disable"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 12:20                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 1970/01/01                       RecurrenceInterval: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t rc -s "status=Enable,starttime=23:59,startfrom=2000-01-01,endon=2037-12-31"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 2037/12/31                       RecurrenceInterval: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0,1,2

administrator@cli> 
verify: bgasched -a mod -t br
bgasched -a mod -t rc -s "autofix=Enable,pause=Enable"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 2037/12/31                       RecurrenceInterval: 1
AutoFix: Enabled                        PauseOnError: Enabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t br -s "status=Disable,starttime=00:00,startfrom=1970-01-01,endon=1"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 00:00                        StartDay: 1970-01-01
OperationalStatus: Disabled             RecurrenceType: Weekly
EndOn: after 1 times                    RecurrenceInterval: 1
DayOfWeek: Sun,Tues

administrator@cli> 
bgasched -a mod -t rc -s "autofix=Enable,pause=Enable"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 2037/12/31                       RecurrenceInterval: 1
AutoFix: Enabled                        PauseOnError: Enabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t br -s "status=Disable,starttime=06:10,startfrom=2037-12-31,endon=255"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 06:10                        StartDay: 2037-12-31
OperationalStatus: Disabled             RecurrenceType: Weekly
EndOn: after 255 times                  RecurrenceInterval: 1
DayOfWeek: Sun,Tues

administrator@cli> 
bgasched -a mod -t rc -s "autofix=Disable,pause=Disable"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 2037/12/31                       RecurrenceInterval: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t br -s "status=Enable,starttime=12:20,startfrom=2000-01-01,endon=1970-01-01"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 12:20                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Weekly
EndOn: 1970/01/01                       RecurrenceInterval: 1
DayOfWeek: Sun,Tues

administrator@cli> 
bgasched -a mod -t rc -s "autofix=Disable,pause=Disable"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 2037/12/31                       RecurrenceInterval: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t br -s "status=Enable,starttime=23:59,startfrom=2000-01-01,endon=2037-12-31"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Weekly
EndOn: 2037/12/31                       RecurrenceInterval: 1
DayOfWeek: Sun,Tues

administrator@cli> 
verify: bgasched -a mod -t sc
bgasched -a mod -t rc -s "autofix=Enable,pause=Enable"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 2037/12/31                       RecurrenceInterval: 1
AutoFix: Enabled                        PauseOnError: Enabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t sc -s "status=Disable,starttime=00:00,startfrom=1970-01-01,endon=1"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 00:00                        StartDay: 1970-01-01
OperationalStatus: Disabled             RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: after 1 times                    DayOfMonth: 1

administrator@cli> 
bgasched -a mod -t rc -s "autofix=Enable,pause=Enable"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 2037/12/31                       RecurrenceInterval: 1
AutoFix: Enabled                        PauseOnError: Enabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t sc -s "status=Disable,starttime=06:10,startfrom=2037-12-31,endon=255"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 06:10                        StartDay: 2037-12-31
OperationalStatus: Disabled             RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: after 255 times                  DayOfMonth: 1

administrator@cli> 
bgasched -a mod -t rc -s "autofix=Disable,pause=Disable"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 2037/12/31                       RecurrenceInterval: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t sc -s "status=Enable,starttime=12:20,startfrom=2000-01-01,endon=1970-01-01"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 12:20                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: 1970/01/01                       DayOfMonth: 1

administrator@cli> 
bgasched -a mod -t rc -s "autofix=Disable,pause=Disable"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 2037/12/31                       RecurrenceInterval: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t sc -s "status=Enable,starttime=23:59,startfrom=2000-01-01,endon=2037-12-31"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: 2037/12/31                       DayOfMonth: 1

administrator@cli> 
Setting the parameters associated with recurType of daily
bgasched -a mod -t rc -s "recurInterval=1"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 2037/12/31                       RecurrenceInterval: 1
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t rc -s "recurInterval=2"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 2037/12/31                       RecurrenceInterval: 2
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t rc -s "recurInterval=254"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 2037/12/31                       RecurrenceInterval: 254
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0,1,2

administrator@cli> 
bgasched -a mod -t rc -s "recurInterval=255"

administrator@cli> 
bgasched -v -t rc
-------------------------------------------------------------------------------
Id: 1                                   Type: RedundancyCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Daily
EndOn: 2037/12/31                       RecurrenceInterval: 255
AutoFix: Disabled                       PauseOnError: Disabled
PoolIds: 0,1,2

administrator@cli> 
Setting the parameters associated with recurType of weekly
bgasched -a mod -t br -s "recurInterval=1,dow=Sun"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Weekly
EndOn: 2037/12/31                       RecurrenceInterval: 1
DayOfWeek: Sun

administrator@cli> 
bgasched -a mod -t br -s "recurInterval=2,dow=Mon"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Weekly
EndOn: 2037/12/31                       RecurrenceInterval: 2
DayOfWeek: Mon

administrator@cli> 
bgasched -a mod -t br -s "recurInterval=51,dow=Tues"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Weekly
EndOn: 2037/12/31                       RecurrenceInterval: 51
DayOfWeek: Tues

administrator@cli> 
bgasched -a mod -t br -s "recurInterval=52,dow=Wed"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Weekly
EndOn: 2037/12/31                       RecurrenceInterval: 52
DayOfWeek: Wed

administrator@cli> 
bgasched -a mod -t br -s "recurInterval=52,dow=Thur"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Weekly
EndOn: 2037/12/31                       RecurrenceInterval: 52
DayOfWeek: Thur

administrator@cli> 
bgasched -a mod -t br -s "recurInterval=52,dow=Fri"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Weekly
EndOn: 2037/12/31                       RecurrenceInterval: 52
DayOfWeek: Fri

administrator@cli> 
bgasched -a mod -t br -s "recurInterval=52,dow=Sat"

administrator@cli> 
bgasched -v -t br
-------------------------------------------------------------------------------
Id: 1                                   Type: BatteryRecondition
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Weekly
EndOn: 2037/12/31                       RecurrenceInterval: 52
DayOfWeek: Sat

administrator@cli> 
Setting the parameters associated with recurType of monthly
bgasched -a mod -t sc -s "daypattern=dom,dom=1"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: 2037/12/31                       DayOfMonth: 1

administrator@cli> 
bgasched -a mod -t sc -s "daypattern=dom,dom=2"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: 2037/12/31                       DayOfMonth: 2

administrator@cli> 
bgasched -a mod -t sc -s "daypattern=dom,dom=30"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: 2037/12/31                       DayOfMonth: 30

administrator@cli> 
bgasched -a mod -t sc -s "daypattern=dom,dom=31"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: 2037/12/31                       DayOfMonth: 31

administrator@cli> 
bgasched -a mod -t sc -s "daypattern=dow,dow=Sun,wom=1st"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: 2037/12/31                       DayOfMonth: 1st Sun

administrator@cli> 
bgasched -a mod -t sc -s "daypattern=dow,dow=Mon,wom=2nd"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: 2037/12/31                       DayOfMonth: 2nd Mon

administrator@cli> 
bgasched -a mod -t sc -s "daypattern=dow,dow=Tues,wom=3rd"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: 2037/12/31                       DayOfMonth: 3rd Tues

administrator@cli> 
bgasched -a mod -t sc -s "daypattern=dow,dow=Wed,wom=4th"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: 2037/12/31                       DayOfMonth: 4th Wed

administrator@cli> 
bgasched -a mod -t sc -s "daypattern=dow,dow=Thur,wom=Last"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: 2037/12/31                       DayOfMonth: Last Thur

administrator@cli> 
bgasched -a mod -t sc -s "daypattern=dow,dow=Fri,wom=Last"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: 2037/12/31                       DayOfMonth: Last Fri

administrator@cli> 
bgasched -a mod -t sc -s "daypattern=dow,dow=Sat,wom=Last"

administrator@cli> 
bgasched -v -t sc
-------------------------------------------------------------------------------
Id: 1                                   Type: SpareCheck
StartTime: 23:59                        StartDay: 2000-01-01
OperationalStatus: Enabled              RecurrenceType: Monthly
MonthMask:  Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
EndOn: 2037/12/31                       DayOfMonth: Last Sat

administrator@cli> 

<font color="green">Pass</font>
'result': 'p'
